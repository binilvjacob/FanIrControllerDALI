CCS PCM C Compiler, Version 4.084, 182               14-Jun-15 15:18

               Filename: main.lst

               ROM used: 4016 words (98%)
                         Largest free fragment is 79
               RAM used: 88 (46%) at main() level
                         102 (53%) worst case
               Stack:    8 worst case (7 in main + 1 for interrupts)

*
0000:  MOVLW  08
0001:  MOVWF  0A
0002:  GOTO   543
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  26
0008:  MOVF   7F,W
0009:  MOVWF  25
000A:  MOVF   0A,W
000B:  MOVWF  2D
000C:  CLRF   0A
000D:  SWAPF  25,F
000E:  MOVF   04,W
000F:  MOVWF  27
0010:  MOVF   20,W
0011:  MOVWF  28
0012:  MOVF   21,W
0013:  MOVWF  29
0014:  MOVF   22,W
0015:  MOVWF  2A
0016:  MOVF   23,W
0017:  MOVWF  2B
0018:  MOVF   24,W
0019:  MOVWF  2C
001A:  BCF    03.7
001B:  BCF    03.5
001C:  MOVLW  8C
001D:  MOVWF  04
001E:  BTFSS  00.0
001F:  GOTO   022
0020:  BTFSC  0C.0
0021:  GOTO   039
0022:  BTFSS  0B.5
0023:  GOTO   026
0024:  BTFSC  0B.2
0025:  GOTO   03B
0026:  MOVF   27,W
0027:  MOVWF  04
0028:  MOVF   28,W
0029:  MOVWF  20
002A:  MOVF   29,W
002B:  MOVWF  21
002C:  MOVF   2A,W
002D:  MOVWF  22
002E:  MOVF   2B,W
002F:  MOVWF  23
0030:  MOVF   2C,W
0031:  MOVWF  24
0032:  MOVF   2D,W
0033:  MOVWF  0A
0034:  SWAPF  26,W
0035:  MOVWF  03
0036:  SWAPF  7F,F
0037:  SWAPF  7F,W
0038:  RETFIE
0039:  BCF    0A.3
003A:  GOTO   397
003B:  BCF    0A.3
003C:  GOTO   35D
....................  
.................... #include "main.h"  
.................... #include <16F873a.h> 
.................... //////// Standard Header file for the PIC16F873A device //////////////// 
.................... #device PIC16F873A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES HS                   	//Crystal osc <= 4mhz for PCM/PCH , 3mhz to 10 mhz for PCD 
.................... #FUSES PUT                   	//Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
....................  
.................... #use delay(clock=20000000) 
*
03B8:  MOVLW  7E
03B9:  MOVWF  04
03BA:  MOVF   00,W
03BB:  BTFSC  03.2
03BC:  GOTO   3CA
03BD:  MOVLW  06
03BE:  MOVWF  21
03BF:  CLRF   20
03C0:  DECFSZ 20,F
03C1:  GOTO   3C0
03C2:  DECFSZ 21,F
03C3:  GOTO   3BF
03C4:  MOVLW  7B
03C5:  MOVWF  20
03C6:  DECFSZ 20,F
03C7:  GOTO   3C6
03C8:  DECFSZ 00,F
03C9:  GOTO   3BD
03CA:  RETLW  00
.................... //#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
.................... #include "lcd.c" 
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCD.C                                     //// 
.................... ////                 Driver for common LCD modules                         //// 
.................... ////                                                                       //// 
.................... ////  lcd_init()   Must be called before any other function.               //// 
.................... ////                                                                       //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.         //// 
.................... ////                 \a  Set cursor position to upper left                 //// 
.................... ////                 \f  Clear display, set cursor to upper left           //// 
.................... ////                 \n  Go to start of second line                        //// 
.................... ////                 \b  Move back one position                            //// 
.................... ////              If LCD_EXTENDED_NEWLINE is defined, the \n character     //// 
.................... ////              will erase all remanining characters on the current      //// 
.................... ////              line, and move the cursor to the beginning of the next   //// 
.................... ////              line.                                                    //// 
.................... ////              If LCD_EXTENDED_NEWLINE is defined, the \r character     //// 
.................... ////              will move the cursor to the start of the current         //// 
.................... ////              line.                                                    //// 
.................... ////                                                                       //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)        //// 
.................... ////                                                                       //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD             //// 
.................... ////                                                                       //// 
.................... ////  CONFIGURATION                                                        //// 
.................... ////  The LCD can be configured in one of two ways: a.) port access or     //// 
.................... ////  b.) pin access.  Port access requires the entire 7 bit interface     //// 
.................... ////  connected to one GPIO port, and the data bits (D4:D7 of the LCD)     //// 
.................... ////  connected to sequential pins on the GPIO.  Pin access                //// 
.................... ////  has no requirements, all 7 bits of the control interface can         //// 
.................... ////  can be connected to any GPIO using several ports.                    //// 
.................... ////                                                                       //// 
.................... ////  To use port access, #define LCD_DATA_PORT to the SFR location of     //// 
.................... ////  of the GPIO port that holds the interface, -AND- edit LCD_PIN_MAP    //// 
.................... ////  of this file to configure the pin order.  If you are using a         //// 
.................... ////  baseline PIC (PCB), then LCD_OUTPUT_MAP and LCD_INPUT_MAP also must  //// 
.................... ////  be defined.                                                          //// 
.................... ////                                                                       //// 
.................... ////  Example of port access:                                              //// 
.................... ////     #define LCD_DATA_PORT getenv("SFR:PORTD")                         //// 
.................... ////                                                                       //// 
.................... ////  To use pin access, the following pins must be defined:               //// 
.................... ////     LCD_ENABLE_PIN                                                    //// 
.................... ////     LCD_RS_PIN                                                        //// 
.................... ////     LCD_RW_PIN                                                        //// 
.................... ////     LCD_DATA4                                                         //// 
.................... ////     LCD_DATA5                                                         //// 
.................... ////     LCD_DATA6                                                         //// 
.................... ////     LCD_DATA7                                                         //// 
.................... ////                                                                       //// 
.................... ////  Example of pin access:                                               //// 
.................... ////     #define LCD_ENABLE_PIN  PIN_E0                                    //// 
.................... ////     #define LCD_RS_PIN      PIN_E1                                    //// 
.................... ////     #define LCD_RW_PIN      PIN_E2                                    //// 
.................... ////     #define LCD_DATA4       PIN_D4                                    //// 
.................... ////     #define LCD_DATA5       PIN_D5                                    //// 
.................... ////     #define LCD_DATA6       PIN_D6                                    //// 
.................... ////     #define LCD_DATA7       PIN_D7                                    //// 
.................... ////                                                                       //// 
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2010 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... // define the pinout. 
.................... // only required if port access is being used. 
....................      #define LCD_ENABLE_PIN  PIN_C3                                    //// 
....................      #define LCD_RS_PIN      PIN_C2                                    //// 
....................      #define LCD_RW_PIN      PIN_b7                                    //// 
....................      #define LCD_DATA4       PIN_C7                                    //// 
....................      #define LCD_DATA5       PIN_C6                                    //// 
....................      #define LCD_DATA6       PIN_C5                                    //// 
....................      #define LCD_DATA7       PIN_C4  
.................... typedef struct   
.................... {                            // This structure is overlayed 
....................    BOOLEAN enable;           // on to an I/O port to gain 
....................    BOOLEAN rs;               // access to the LCD pins. 
....................    BOOLEAN rw;               // The bits are allocated from 
....................    BOOLEAN unused;           // low order up.  ENABLE will 
....................    int     data : 4;         // be LSB pin of that port. 
....................   #if defined(__PCD__)       // The port used will be LCD_DATA_PORT. 
....................    int    reserved: 8; 
....................   #endif 
.................... } LCD_PIN_MAP; 
....................  
.................... // this is to improve compatability with previous LCD drivers that accepted 
.................... // a define labeled 'use_portb_lcd' that configured the LCD onto port B. 
.................... #if ((defined(use_portb_lcd)) && (use_portb_lcd==TRUE)) 
....................  #define LCD_DATA_PORT getenv("SFR:PORTB") 
.................... #endif 
....................  
.................... #if defined(__PCB__) 
....................    // these definitions only need to be modified for baseline PICs. 
....................    // all other PICs use LCD_PIN_MAP or individual LCD_xxx pin definitions. 
.................... /*                                    EN, RS,   RW,   UNUSED,  DATA  */ 
....................  const LCD_PIN_MAP LCD_OUTPUT_MAP =  {0,  0,    0,    0,       0}; 
....................  const LCD_PIN_MAP LCD_INPUT_MAP =   {0,  0,    0,    0,       0xF}; 
.................... #endif 
....................  
.................... ////////////////////// END CONFIGURATION /////////////////////////////////// 
....................  
.................... #ifndef LCD_ENABLE_PIN 
....................    #define lcd_output_enable(x) lcdlat.enable=x 
....................    #define lcd_enable_tris()   lcdtris.enable=0 
.................... #else 
....................    #define lcd_output_enable(x) output_bit(LCD_ENABLE_PIN, x) 
....................    #define lcd_enable_tris()  output_drive(LCD_ENABLE_PIN) 
.................... #endif 
....................  
.................... #ifndef LCD_RS_PIN 
....................    #define lcd_output_rs(x) lcdlat.rs=x 
....................    #define lcd_rs_tris()   lcdtris.rs=0 
.................... #else 
....................    #define lcd_output_rs(x) output_bit(LCD_RS_PIN, x) 
....................    #define lcd_rs_tris()  output_drive(LCD_RS_PIN) 
.................... #endif 
....................  
.................... #ifndef LCD_RW_PIN 
....................    #define lcd_output_rw(x) lcdlat.rw=x 
....................    #define lcd_rw_tris()   lcdtris.rw=0 
.................... #else 
....................    #define lcd_output_rw(x) output_bit(LCD_RW_PIN, x) 
....................    #define lcd_rw_tris()  output_drive(LCD_RW_PIN) 
.................... #endif 
....................  
.................... // original version of this library incorrectly labeled LCD_DATA0 as LCD_DATA4, 
.................... // LCD_DATA1 as LCD_DATA5, and so on.  this block of code makes the driver 
.................... // compatible with any code written for the original library 
.................... #if (defined(LCD_DATA0) && defined(LCD_DATA1) && defined(LCD_DATA2) && defined(LCD_DATA3) && !defined(LCD_DATA4) && !defined(LCD_DATA5) && !defined(LCD_DATA6) && !defined(LCD_DATA7)) 
....................    #define  LCD_DATA4    LCD_DATA0 
....................    #define  LCD_DATA5    LCD_DATA1 
....................    #define  LCD_DATA6    LCD_DATA2 
....................    #define  LCD_DATA7    LCD_DATA3 
.................... #endif 
....................  
.................... #ifndef LCD_DATA4 
.................... #ifndef LCD_DATA_PORT 
....................    #if defined(__PCB__) 
....................       #define LCD_DATA_PORT      0x06     //portb 
....................       #define set_tris_lcd(x)   set_tris_b(x) 
....................    #else 
....................      #if defined(PIN_D0) 
....................       #define LCD_DATA_PORT      getenv("SFR:PORTD")     //portd 
....................      #else 
....................       #define LCD_DATA_PORT      getenv("SFR:PORTB")     //portb 
....................      #endif 
....................    #endif    
.................... #endif 
....................  
.................... #if defined(__PCB__) 
....................    LCD_PIN_MAP lcd, lcdlat; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT 
.................... #elif defined(__PCM__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT 
....................    #byte lcdtris = LCD_DATA_PORT+0x80 
.................... #elif defined(__PCH__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT+9 
....................    #byte lcdtris = LCD_DATA_PORT+0x12 
.................... #elif defined(__PCD__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #word lcd = LCD_DATA_PORT 
....................    #word lcdlat = LCD_DATA_PORT+2 
....................    #word lcdtris = LCD_DATA_PORT-0x02 
.................... #endif 
.................... #endif   //LCD_DATA4 not defined 
....................  
.................... #ifndef LCD_TYPE 
....................    #define LCD_TYPE 2           // 0=5x7, 1=5x10, 2=2 lines 
.................... #endif 
....................  
.................... #ifndef LCD_LINE_TWO 
....................    #define LCD_LINE_TWO 0xc0    // LCD RAM address for the second line 
.................... #endif 
....................  
.................... #ifndef LCD_LINE_LENGTH 
....................    #define LCD_LINE_LENGTH 16 
.................... #endif 
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (LCD_TYPE << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
.................... BYTE lcdline; 
.................... BYTE lcd_read_nibble(void); 
....................  
.................... BYTE lcd_read_byte(void) 
.................... { 
....................    BYTE low,high; 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_INPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_float(LCD_DATA4); 
....................    output_float(LCD_DATA5); 
....................    output_float(LCD_DATA6); 
....................    output_float(LCD_DATA7); 
....................   #else 
....................    lcdtris.data = 0xF; 
....................   #endif 
....................  #endif 
....................          
....................    lcd_output_rw(1); 
....................   delay_us(10);// delay_cycles(1); 
....................    lcd_output_enable(1); 
....................   delay_us(10);// delay_cycles(1); 
....................    high = lcd_read_nibble(); 
....................        
....................    lcd_output_enable(0); 
....................   delay_us(10);// delay_cycles(1); 
....................    lcd_output_enable(1); 
....................    delay_us(10);//delay_us(1); 
....................    low = lcd_read_nibble(); 
....................        
....................    lcd_output_enable(0); 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_OUTPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_drive(LCD_DATA4); 
....................    output_drive(LCD_DATA5); 
....................    output_drive(LCD_DATA6); 
....................    output_drive(LCD_DATA7); 
....................   #else 
....................    lcdtris.data = 0x0; 
....................   #endif 
....................  #endif 
....................  
....................    return( (high<<4) | low); 
.................... } 
....................  
.................... BYTE lcd_read_nibble(void) 
.................... { 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    BYTE n = 0x00; 
....................  
....................    /* Read the data port */ 
....................    n |= input(LCD_DATA4); 
....................    n |= input(LCD_DATA5) << 1; 
....................    n |= input(LCD_DATA6) << 2; 
....................    n |= input(LCD_DATA7) << 3; 
....................     
....................    return(n); 
....................   #else 
....................    return(lcd.data); 
....................   #endif 
.................... } 
....................  
.................... void lcd_send_nibble(BYTE n) 
.................... { 
.................... //  #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    /* Write to the data port */ 
....................    output_bit(LCD_DATA4, bit_test(n, 0)); 
03CB:  BSF    03.5
03CC:  BTFSC  25.0
03CD:  GOTO   3D2
03CE:  BCF    03.5
03CF:  BCF    07.7
03D0:  GOTO   3D4
03D1:  BSF    03.5
03D2:  BCF    03.5
03D3:  BSF    07.7
03D4:  BCF    2F.7
03D5:  MOVF   2F,W
03D6:  BSF    03.5
03D7:  MOVWF  07
....................    output_bit(LCD_DATA5, bit_test(n, 1)); 
03D8:  BTFSC  25.1
03D9:  GOTO   3DE
03DA:  BCF    03.5
03DB:  BCF    07.6
03DC:  GOTO   3E0
03DD:  BSF    03.5
03DE:  BCF    03.5
03DF:  BSF    07.6
03E0:  BCF    2F.6
03E1:  MOVF   2F,W
03E2:  BSF    03.5
03E3:  MOVWF  07
....................    output_bit(LCD_DATA6, bit_test(n, 2)); 
03E4:  BTFSC  25.2
03E5:  GOTO   3EA
03E6:  BCF    03.5
03E7:  BCF    07.5
03E8:  GOTO   3EC
03E9:  BSF    03.5
03EA:  BCF    03.5
03EB:  BSF    07.5
03EC:  BCF    2F.5
03ED:  MOVF   2F,W
03EE:  BSF    03.5
03EF:  MOVWF  07
....................    output_bit(LCD_DATA7, bit_test(n, 3)); 
03F0:  BTFSC  25.3
03F1:  GOTO   3F6
03F2:  BCF    03.5
03F3:  BCF    07.4
03F4:  GOTO   3F8
03F5:  BSF    03.5
03F6:  BCF    03.5
03F7:  BSF    07.4
03F8:  BCF    2F.4
03F9:  MOVF   2F,W
03FA:  BSF    03.5
03FB:  MOVWF  07
.................... //  #else       
....................   // lcdlat.data = n; 
.................... //  #endif 
....................        
....................  //  delay_cycles(1); 
.................... 	delay_us(10); 
03FC:  MOVLW  10
03FD:  BCF    03.5
03FE:  MOVWF  20
03FF:  DECFSZ 20,F
0400:  GOTO   3FF
0401:  NOP
....................    output_high(LCD_ENABLE_PIN);//lcd_output_enable(1); 
0402:  BCF    2F.3
0403:  MOVF   2F,W
0404:  BSF    03.5
0405:  MOVWF  07
0406:  BCF    03.5
0407:  BSF    07.3
....................    delay_us(10); 
0408:  MOVLW  10
0409:  MOVWF  20
040A:  DECFSZ 20,F
040B:  GOTO   40A
040C:  NOP
....................    output_low(LCD_ENABLE_PIN);//lcd_output_enable(0); 
040D:  BCF    2F.3
040E:  MOVF   2F,W
040F:  BSF    03.5
0410:  MOVWF  07
0411:  BCF    03.5
0412:  BCF    07.3
.................... } 
0413:  RETLW  00
....................  
.................... void lcd_send_byte(BYTE address, BYTE n) 
.................... { 
....................   #if defined(__PCB__) 
....................    set_tris_lcd(LCD_OUTPUT_MAP); 
....................   #else 
....................    lcd_enable_tris(); 
0414:  BCF    2F.3
0415:  MOVF   2F,W
0416:  BSF    03.5
0417:  MOVWF  07
....................    lcd_rs_tris(); 
0418:  BCF    03.5
0419:  BCF    2F.2
041A:  MOVF   2F,W
041B:  BSF    03.5
041C:  MOVWF  07
....................    lcd_rw_tris(); 
041D:  BCF    06.7
....................   #endif 
....................  
....................    lcd_output_rs(0); 
041E:  BCF    03.5
041F:  BCF    07.2
0420:  BCF    2F.2
0421:  MOVF   2F,W
0422:  BSF    03.5
0423:  MOVWF  07
....................   // while ( bit_test(lcd_read_byte(),7) ) ; 
.................... 	delay_us(100); 
0424:  MOVLW  A6
0425:  BCF    03.5
0426:  MOVWF  20
0427:  DECFSZ 20,F
0428:  GOTO   427
0429:  NOP
....................    lcd_output_rs(address); 
042A:  BSF    03.5
042B:  MOVF   22,F
042C:  BTFSS  03.2
042D:  GOTO   432
042E:  BCF    03.5
042F:  BCF    07.2
0430:  GOTO   434
0431:  BSF    03.5
0432:  BCF    03.5
0433:  BSF    07.2
0434:  BCF    2F.2
0435:  MOVF   2F,W
0436:  BSF    03.5
0437:  MOVWF  07
....................   delay_us(10);// delay_cycles(1); 
0438:  MOVLW  10
0439:  BCF    03.5
043A:  MOVWF  20
043B:  DECFSZ 20,F
043C:  GOTO   43B
043D:  NOP
....................    lcd_output_rw(0); 
043E:  BCF    06.7
043F:  BSF    03.5
0440:  BCF    06.7
....................  delay_us(10);//  delay_cycles(1); 
0441:  MOVLW  10
0442:  BCF    03.5
0443:  MOVWF  20
0444:  DECFSZ 20,F
0445:  GOTO   444
0446:  NOP
....................    lcd_output_enable(0); 
0447:  BCF    07.3
0448:  BCF    2F.3
0449:  MOVF   2F,W
044A:  BSF    03.5
044B:  MOVWF  07
....................    lcd_send_nibble(n >> 4); 
044C:  SWAPF  23,W
044D:  MOVWF  24
044E:  MOVLW  0F
044F:  ANDWF  24,F
0450:  MOVF   24,W
0451:  MOVWF  25
0452:  BCF    03.5
0453:  CALL   3CB
....................    lcd_send_nibble(n & 0xf); 
0454:  BSF    03.5
0455:  MOVF   23,W
0456:  ANDLW  0F
0457:  MOVWF  24
0458:  MOVWF  25
0459:  BCF    03.5
045A:  CALL   3CB
.................... } 
045B:  RETLW  00
....................  
.................... #if defined(LCD_EXTENDED_NEWLINE) 
.................... unsigned int8 g_LcdX, g_LcdY; 
.................... #endif 
....................  
.................... void lcd_init(void)  
.................... { 
....................    BYTE i; 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_OUTPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_drive(LCD_DATA4); 
045C:  BCF    2F.7
045D:  MOVF   2F,W
045E:  BSF    03.5
045F:  MOVWF  07
....................    output_drive(LCD_DATA5); 
0460:  BCF    03.5
0461:  BCF    2F.6
0462:  MOVF   2F,W
0463:  BSF    03.5
0464:  MOVWF  07
....................    output_drive(LCD_DATA6); 
0465:  BCF    03.5
0466:  BCF    2F.5
0467:  MOVF   2F,W
0468:  BSF    03.5
0469:  MOVWF  07
....................    output_drive(LCD_DATA7); 
046A:  BCF    03.5
046B:  BCF    2F.4
046C:  MOVF   2F,W
046D:  BSF    03.5
046E:  MOVWF  07
....................   #else 
....................    lcdtris.data = 0x0; 
....................   #endif 
....................    lcd_enable_tris(); 
046F:  BCF    03.5
0470:  BCF    2F.3
0471:  MOVF   2F,W
0472:  BSF    03.5
0473:  MOVWF  07
....................    lcd_rs_tris(); 
0474:  BCF    03.5
0475:  BCF    2F.2
0476:  MOVF   2F,W
0477:  BSF    03.5
0478:  MOVWF  07
....................    lcd_rw_tris(); 
0479:  BCF    06.7
....................  #endif 
....................  
....................    output_low(LCD_RS_PIN);//lcd_output_rs(0); 
047A:  BCF    03.5
047B:  BCF    2F.2
047C:  MOVF   2F,W
047D:  BSF    03.5
047E:  MOVWF  07
047F:  BCF    03.5
0480:  BCF    07.2
....................    //lcd_output_rw(0); 
....................    output_low(LCD_ENABLE_PIN);//lcd_output_enable(0); 
0481:  BCF    2F.3
0482:  MOVF   2F,W
0483:  BSF    03.5
0484:  MOVWF  07
0485:  BCF    03.5
0486:  BCF    07.3
....................      
....................    delay_ms(15); 
0487:  MOVLW  0F
0488:  MOVWF  7E
0489:  CALL   3B8
....................    for(i=1;i<=3;++i) 
048A:  MOVLW  01
048B:  MOVWF  74
048C:  MOVF   74,W
048D:  SUBLW  03
048E:  BTFSS  03.0
048F:  GOTO   49A
....................    { 
....................        lcd_send_nibble(3); 
0490:  MOVLW  03
0491:  BSF    03.5
0492:  MOVWF  25
0493:  BCF    03.5
0494:  CALL   3CB
....................        delay_ms(5); 
0495:  MOVLW  05
0496:  MOVWF  7E
0497:  CALL   3B8
....................    } 
0498:  INCF   74,F
0499:  GOTO   48C
....................     
....................    lcd_send_nibble(2); 
049A:  MOVLW  02
049B:  BSF    03.5
049C:  MOVWF  25
049D:  BCF    03.5
049E:  CALL   3CB
....................    delay_ms(5); 
049F:  MOVLW  05
04A0:  MOVWF  7E
04A1:  CALL   3B8
....................    for(i=0;i<=3;++i) 
04A2:  CLRF   74
04A3:  MOVF   74,W
04A4:  SUBLW  03
04A5:  BTFSS  03.0
04A6:  GOTO   4B4
....................       lcd_send_byte(0,LCD_INIT_STRING[i]); 
04A7:  MOVF   74,W
04A8:  CALL   03D
04A9:  MOVWF  75
04AA:  BSF    03.5
04AB:  CLRF   22
04AC:  BCF    03.5
04AD:  MOVF   75,W
04AE:  BSF    03.5
04AF:  MOVWF  23
04B0:  BCF    03.5
04B1:  CALL   414
....................  
....................   #if defined(LCD_EXTENDED_NEWLINE) 
04B2:  INCF   74,F
04B3:  GOTO   4A3
....................    g_LcdX = 0; 
....................    g_LcdY = 0; 
....................   #endif 
.................... } 
04B4:  RETLW  00
....................  
.................... void lcd_gotoxy(int x, int y) 
.................... { 
....................    int address; 
....................     
....................  
....................    switch(y) { 
*
0591:  MOVLW  01
0592:  BSF    03.5
0593:  SUBWF  20,W
0594:  ADDLW  FC
0595:  BTFSC  03.0
0596:  GOTO   5AB
0597:  ADDLW  04
0598:  BCF    03.5
0599:  GOTO   5B6
....................      case 1 : address=0x80;break; 
059A:  MOVLW  80
059B:  BSF    03.5
059C:  MOVWF  21
059D:  GOTO   5AB
....................      case 2 : address=0xc0;break; 
059E:  MOVLW  C0
059F:  BSF    03.5
05A0:  MOVWF  21
05A1:  GOTO   5AB
.................... 	 case 3 : address=0x94;break; 
05A2:  MOVLW  94
05A3:  BSF    03.5
05A4:  MOVWF  21
05A5:  GOTO   5AB
.................... 	 case 4 : address=0xd4;break; 
05A6:  MOVLW  D4
05A7:  BSF    03.5
05A8:  MOVWF  21
05A9:  GOTO   5AB
05AA:  BSF    03.5
.................... 			   } 
....................    address+=x-1; 
05AB:  MOVLW  01
05AC:  BCF    03.5
05AD:  SUBWF  7E,W
05AE:  BSF    03.5
05AF:  ADDWF  21,F
....................    lcd_send_byte(0,address); 
05B0:  CLRF   22
05B1:  MOVF   21,W
05B2:  MOVWF  23
05B3:  BCF    03.5
05B4:  CALL   414
.................... } 
05B5:  RETLW  00
....................  
.................... void lcd_putc( char c) { 
....................    switch (c) { 
*
05BE:  MOVF   7D,W
05BF:  XORLW  0C
05C0:  BTFSC  03.2
05C1:  GOTO   5C9
05C2:  XORLW  06
05C3:  BTFSC  03.2
05C4:  GOTO   5D5
05C5:  XORLW  02
05C6:  BTFSC  03.2
05C7:  GOTO   5DE
05C8:  GOTO   5E5
....................      case '\f'   : lcd_send_byte(0,1); 
05C9:  BSF    03.5
05CA:  CLRF   22
05CB:  MOVLW  01
05CC:  MOVWF  23
05CD:  BCF    03.5
05CE:  CALL   414
....................                    lcdline=1; 
05CF:  MOVLW  01
05D0:  MOVWF  2E
....................                    delay_ms(2); 
05D1:  MOVLW  02
05D2:  MOVWF  7E
05D3:  CALL   3B8
....................                                            break; 
05D4:  GOTO   5EF
....................      case '\n'   : lcd_gotoxy(1,++lcdline);        break; 
05D5:  INCF   2E,F
05D6:  MOVLW  01
05D7:  MOVWF  7E
05D8:  MOVF   2E,W
05D9:  BSF    03.5
05DA:  MOVWF  20
05DB:  BCF    03.5
05DC:  CALL   591
05DD:  GOTO   5EF
....................      case '\b'   : lcd_send_byte(0,0x10);  break; 
05DE:  BSF    03.5
05DF:  CLRF   22
05E0:  MOVLW  10
05E1:  MOVWF  23
05E2:  BCF    03.5
05E3:  CALL   414
05E4:  GOTO   5EF
....................      default     : lcd_send_byte(1,c);     break; 
05E5:  MOVLW  01
05E6:  BSF    03.5
05E7:  MOVWF  22
05E8:  BCF    03.5
05E9:  MOVF   7D,W
05EA:  BSF    03.5
05EB:  MOVWF  23
05EC:  BCF    03.5
05ED:  CALL   414
05EE:  GOTO   5EF
....................    } 
.................... } 
05EF:  RETLW  00
....................  
....................  
....................  
....................  
.................... /*void lcd_putc(char c) 
.................... { 
....................    switch (c) 
....................    { 
....................       case '\a'   :  lcd_gotoxy(1,1);     break; 
....................  
....................       case '\f'   :  lcd_send_byte(0,1); 
....................                      delay_ms(2); 
....................                     #if defined(LCD_EXTENDED_NEWLINE) 
....................                      g_LcdX = 0; 
....................                      g_LcdY = 0; 
....................                     #endif 
....................                      break; 
....................  
....................      #if defined(LCD_EXTENDED_NEWLINE) 
....................       case '\r'   :  lcd_gotoxy(1, g_LcdY+1);   break; 
....................       case '\n'   : 
....................          while (g_LcdX++ < LCD_LINE_LENGTH) 
....................          { 
....................             lcd_send_byte(1, ' '); 
....................          } 
....................          lcd_gotoxy(1, g_LcdY+2); 
....................          break; 
....................      #else 
....................       case '\n'   : lcd_gotoxy(1,2);        break; 
....................      #endif 
....................       
....................       case '\b'   : lcd_send_byte(0,0x10);  break; 
....................       
....................      #if defined(LCD_EXTENDED_NEWLINE) 
....................       default     :  
....................          if (g_LcdX < LCD_LINE_LENGTH) 
....................          { 
....................             lcd_send_byte(1, c); 
....................             g_LcdX++; 
....................          } 
....................          break; 
....................      #else 
....................       default     : lcd_send_byte(1,c);     break; 
....................      #endif 
....................    } 
.................... } 
....................  */ 
.................... char lcd_getc(BYTE x, BYTE y) 
.................... { 
....................    char value; 
....................  
....................    lcd_gotoxy(x,y); 
....................    while ( bit_test(lcd_read_byte(),7) ); // wait until busy flag is low 
....................    lcd_output_rs(1); 
....................    value = lcd_read_byte(); 
....................    lcd_output_rs(0); 
....................     
....................    return(value); 
.................... } 
....................  
....................  
.................... #define up    0b00011110 
.................... #define down  0b00011101 
.................... #define start 0b00011011 
.................... #define select 0b00010111 
.................... #define menu  0b00001111 
....................  
.................... #define UPS    1 
.................... #define DWN 2 
.................... #define STRT 3 
.................... #define SLE 4 
.................... #define Mnu  5 
....................  
.................... #define Chanelbed 1 
.................... #define ChanelMRI 2 
....................  
....................  
....................  
.................... #define  relaylowMRI PIN_a2 
.................... #define  relayMedMRI PIN_a1  
.................... #define  relayhighMRI PIN_a0 
....................  
.................... #define  relaylow PIN_a5 
.................... #define  relayMed PIN_a4  
.................... #define  relayhigh PIN_a3 
....................  
....................  
.................... #define TraiacMRI pin_c0 
.................... #define TraiacBed pin_c1 
....................  
....................  
.................... char keyVal,keypressed; 
.................... char k; 
.................... char passCodeValue[4]; 
.................... char passcode; 
.................... char keyCount; 
.................... char keycode; 
.................... char ModeSelected; 
.................... char mode; 
.................... char Running =0,MenuSelected=0,menuIndex =0; 
*
0D50:  CLRF   3C
0D51:  CLRF   3D
0D52:  CLRF   3E
.................... unsigned int para[8]={1,1,0,0,1,1,0,0}; 
0D53:  MOVLW  01
0D54:  MOVWF  3F
0D55:  MOVWF  40
0D56:  CLRF   41
0D57:  CLRF   42
0D58:  MOVWF  43
0D59:  MOVWF  44
0D5A:  CLRF   45
0D5B:  CLRF   46
.................... char paraLimitLow[8]={1,1,0,0,1,1,0,0}; 
0D5C:  MOVWF  47
0D5D:  MOVWF  48
0D5E:  CLRF   49
0D5F:  CLRF   4A
0D60:  MOVWF  4B
0D61:  MOVWF  4C
0D62:  CLRF   4D
0D63:  CLRF   4E
.................... char  paraLimitHigh[8]={250,30,3,1,250,30,3,1}; 
0D64:  MOVLW  FA
0D65:  MOVWF  4F
0D66:  MOVLW  1E
0D67:  MOVWF  50
0D68:  MOVLW  03
0D69:  MOVWF  51
0D6A:  MOVLW  01
0D6B:  MOVWF  52
0D6C:  MOVLW  FA
0D6D:  MOVWF  53
0D6E:  MOVLW  1E
0D6F:  MOVWF  54
0D70:  MOVLW  03
0D71:  MOVWF  55
0D72:  MOVLW  01
0D73:  MOVWF  56
.................... char ctpress; 
.................... char preMenu; 
.................... char dot; 
.................... char dutyx = 80; 
0D74:  MOVLW  50
0D75:  MOVWF  5A
.................... char BoostVoltage; 
.................... char currentIntencityBed =0; 
0D76:  CLRF   5C
.................... char currentIntencityMRI=0; 
0D77:  CLRF   5D
.................... char outEnable; 
.................... char secondCount; 
.................... char miniutCount; 
.................... char TimerCounterBed; 
.................... char TimerCounterMRI; 
.................... char frequency; 
.................... char displayupdate; 
....................  
.................... unsigned  int inter_bed; 
.................... unsigned int inter_MRI; 
.................... char ProgIndex; 
.................... char preprogNoSelected; 
.................... char buzCount =0; 
0D78:  CLRF   69
.................... int16  pulseCountMRI,pulseCountBed; 
.................... char BedDoom; 
.................... char menuIndexMin; 
.................... char menuIndexMax; 
.................... unsigned int Mri_intravel; 
.................... char dis; 
.................... unsigned int bed_intravel; 
....................  
....................  
....................  
.................... void  readKey(); 
.................... void savepara(void); 
.................... void checkpasscode(void); 
.................... void parameterSelectMenu(void); 
.................... void modeselect(void); 
.................... void init(void); 
.................... void setpara(void); 
.................... void preMnu(char nameIndex); 
.................... void autoProgSel(void ); 
.................... void displayHighlow(char indx); 
.................... void pointcur(char ax); 
.................... void  setintencity(char level,char chanel); 
.................... void setparaDefault(void); 
....................  
.................... BYTE CONST progData [12][6]= {200,15,2,5,15,3, 
.................... 							100,15,1,220,15,2, 
.................... 							10,15,3,5,15,1, 
.................... 							18,14,3,220,15,2, 
.................... 							250,10,0,5,15,3, 
.................... 							200,12,3,90,15,0, 
.................... 							150,10,3,180,15,1, 
.................... 							5,1,0,5,10,3, 
.................... 							10,15,2,150,15,0, 
.................... 							45,10,1,45,1,0 
.................... 							222,10,0,180,12,2, 
.................... 							180,10,3,100,13,3																			 
.................... 							}; 
....................  
....................  
.................... /////////////////////////////////// 
....................  
.................... #int_TIMER0 
.................... void  TIMER0_isr(void)  
.................... { 
....................  
.................... 	if(running==1) 
*
035D:  DECFSZ 3C,W
035E:  GOTO   388
.................... 	{ 
.................... 	 
.................... 			//output_toggle(TraiacMRI); 
.................... 			inter_MRI++; 
035F:  INCF   66,F
.................... 			if(inter_MRI>0xfa) 
0360:  MOVF   66,W
0361:  SUBLW  FA
0362:  BTFSC  03.0
0363:  GOTO   373
.................... 			{ 
.................... 				if(TimerCounterMRI > 0) 
0364:  MOVF   62,F
0365:  BTFSC  03.2
0366:  GOTO   373
.................... 				{  
.................... 					pulseCountMRI++; 
0367:  INCF   6A,F
0368:  BTFSC  03.2
0369:  INCF   6B,F
.................... 					output_toggle(TraiacMRI); 
036A:  BCF    2F.0
036B:  MOVF   2F,W
036C:  BSF    03.5
036D:  MOVWF  07
036E:  MOVLW  01
036F:  BCF    03.5
0370:  XORWF  07,F
.................... 					inter_MRI = Mri_intravel;  
0371:  MOVF   71,W
0372:  MOVWF  66
.................... 				} 
.................... 			} 
.................... 			inter_Bed++; 
0373:  INCF   65,F
.................... 			if(inter_Bed >0xfa) 
0374:  MOVF   65,W
0375:  SUBLW  FA
0376:  BTFSC  03.0
0377:  GOTO   387
.................... 			{ 
.................... 				if(TimerCounterBed > 0) pulseCountbed++; 
0378:  MOVF   61,F
0379:  BTFSC  03.2
037A:  GOTO   37E
037B:  INCF   6C,F
037C:  BTFSC  03.2
037D:  INCF   6D,F
.................... 				output_toggle(Traiacbed); 
037E:  BCF    2F.1
037F:  MOVF   2F,W
0380:  BSF    03.5
0381:  MOVWF  07
0382:  MOVLW  02
0383:  BCF    03.5
0384:  XORWF  07,F
.................... 				inter_Bed = bed_intravel; 
0385:  MOVF   73,W
0386:  MOVWF  65
.................... 			}	 
.................... 	} 
.................... 	else 
0387:  GOTO   394
.................... 	{ 
.................... 		output_low(TraiacMRI); 
0388:  BCF    2F.0
0389:  MOVF   2F,W
038A:  BSF    03.5
038B:  MOVWF  07
038C:  BCF    03.5
038D:  BCF    07.0
.................... 		output_low(Traiacbed); 
038E:  BCF    2F.1
038F:  MOVF   2F,W
0390:  BSF    03.5
0391:  MOVWF  07
0392:  BCF    03.5
0393:  BCF    07.1
.................... 	} 
.................... } 
0394:  BCF    0B.2
0395:  BCF    0A.3
0396:  GOTO   026
.................... #int_TIMER1 
.................... void  TIMER1_isr(void)  
.................... { 
.................... 	secondCount--; 
0397:  DECFSZ 5F,F
.................... 	if(secondCount==0) 
0398:  GOTO   3B5
.................... 	{ 
.................... 		if( buzCount ==0) 
0399:  MOVF   69,F
039A:  BTFSS  03.2
039B:  GOTO   3A1
.................... 		{ 
.................... 		output_low(pin_b5); 
039C:  BSF    03.5
039D:  BCF    06.5
039E:  BCF    03.5
039F:  BCF    06.5
.................... 		} 
.................... 		else 
03A0:  GOTO   3A7
.................... 		{ 
.................... 			output_toggle(pin_b5); 
03A1:  BSF    03.5
03A2:  BCF    06.5
03A3:  MOVLW  20
03A4:  BCF    03.5
03A5:  XORWF  06,F
.................... 			buzCount--; 
03A6:  DECF   69,F
.................... 		}		 
.................... 		displayupdate = 1;		 
03A7:  MOVLW  01
03A8:  MOVWF  64
.................... 		secondCount = 8; 
03A9:  MOVLW  08
03AA:  MOVWF  5F
.................... 		miniutCount--; 
03AB:  DECFSZ 60,F
.................... 		if( miniutCount ==0 )  
03AC:  GOTO   3B5
.................... 		{ 
.................... 			miniutCount=59; 
03AD:  MOVLW  3B
03AE:  MOVWF  60
.................... 			if(TimerCounterMRI >0){TimerCounterMRI--;} 
03AF:  MOVF   62,F
03B0:  BTFSS  03.2
03B1:  DECF   62,F
.................... 			if(TimerCounterBed >0){TimerCounterBed--;} 
03B2:  MOVF   61,F
03B3:  BTFSS  03.2
03B4:  DECF   61,F
.................... 		} 
.................... 	} 
.................... } 
.................... //////////////////////////////////// 
....................  
....................  
03B5:  BCF    0C.0
03B6:  BCF    0A.3
03B7:  GOTO   026
.................... void  setintencity(char level,char chanel) 
.................... { 
.................... 	if(chanel == 2) 
*
04EA:  MOVF   75,W
04EB:  SUBLW  02
04EC:  BTFSS  03.2
04ED:  GOTO   531
.................... 	{ 
.................... 		switch (level) 
.................... 		{ 
04EE:  MOVF   74,W
04EF:  BTFSC  03.2
04F0:  GOTO   4FB
04F1:  XORLW  01
04F2:  BTFSC  03.2
04F3:  GOTO   508
04F4:  XORLW  03
04F5:  BTFSC  03.2
04F6:  GOTO   515
04F7:  XORLW  01
04F8:  BTFSC  03.2
04F9:  GOTO   522
04FA:  GOTO   52F
.................... 			case 0: 
.................... 					output_low (relaylowMRI); 
04FB:  BSF    03.5
04FC:  BCF    05.2
04FD:  BCF    03.5
04FE:  BCF    05.2
.................... 					output_low(relayMedMRI); 
04FF:  BSF    03.5
0500:  BCF    05.1
0501:  BCF    03.5
0502:  BCF    05.1
.................... 					output_low (relayhighMRI); 
0503:  BSF    03.5
0504:  BCF    05.0
0505:  BCF    03.5
0506:  BCF    05.0
.................... 										 
.................... 				 	break; 
0507:  GOTO   530
.................... 			case 1: output_high (relaylowMRI); 
0508:  BSF    03.5
0509:  BCF    05.2
050A:  BCF    03.5
050B:  BSF    05.2
.................... 					output_low(relayMedMRI); 
050C:  BSF    03.5
050D:  BCF    05.1
050E:  BCF    03.5
050F:  BCF    05.1
.................... 					output_low (relayhighMRI); 
0510:  BSF    03.5
0511:  BCF    05.0
0512:  BCF    03.5
0513:  BCF    05.0
.................... 					 
.................... 					break; 
0514:  GOTO   530
.................... 			case 2: output_high (relaylowMRI); 
0515:  BSF    03.5
0516:  BCF    05.2
0517:  BCF    03.5
0518:  BSF    05.2
.................... 					output_high(relayMedMRI); 
0519:  BSF    03.5
051A:  BCF    05.1
051B:  BCF    03.5
051C:  BSF    05.1
.................... 					output_low (relayhighMRI); 
051D:  BSF    03.5
051E:  BCF    05.0
051F:  BCF    03.5
0520:  BCF    05.0
.................... 					 
.................... 					break; 
0521:  GOTO   530
.................... 			case 3: output_high(relaylowMRI); 
0522:  BSF    03.5
0523:  BCF    05.2
0524:  BCF    03.5
0525:  BSF    05.2
.................... 					output_high(relayMedMRI); 
0526:  BSF    03.5
0527:  BCF    05.1
0528:  BCF    03.5
0529:  BSF    05.1
.................... 					output_high (relayhighMRI); 
052A:  BSF    03.5
052B:  BCF    05.0
052C:  BCF    03.5
052D:  BSF    05.0
.................... 					 
.................... 					break; 
052E:  GOTO   530
.................... 			default: break; 
052F:  GOTO   530
....................  
.................... 		} 
.................... 	} 
.................... 	else  if (Chanel == 1) 
0530:  GOTO   590
0531:  DECFSZ 75,W
0532:  GOTO   590
.................... 	{ 
.................... 		switch (level) 
.................... 		{ 
0533:  MOVF   74,W
0534:  BTFSC  03.2
0535:  GOTO   540
0536:  XORLW  01
0537:  BTFSC  03.2
0538:  GOTO   550
0539:  XORLW  03
053A:  BTFSC  03.2
053B:  GOTO   564
053C:  XORLW  01
053D:  BTFSC  03.2
053E:  GOTO   578
053F:  GOTO   58D
.................... 			case 0:	 
.................... 					output_low (relaylow);										 
0540:  BSF    03.5
0541:  BCF    05.5
0542:  BCF    03.5
0543:  BCF    05.5
.................... 					output_low (relayhigh); 
0544:  BSF    03.5
0545:  BCF    05.3
0546:  BCF    03.5
0547:  BCF    05.3
.................... 					output_low(relayMed); 
0548:  BSF    03.5
0549:  BCF    05.4
054A:  BCF    03.5
054B:  BCF    05.4
.................... 					set_tris_a (0x00);																 
054C:  MOVLW  00
054D:  BSF    03.5
054E:  MOVWF  05
.................... 				 	break; 
054F:  GOTO   58F
.................... 			case 1: 
.................... 					output_high (relaylow);					 
0550:  BSF    03.5
0551:  BCF    05.5
0552:  BCF    03.5
0553:  BSF    05.5
.................... 					output_low (relayhigh); 
0554:  BSF    03.5
0555:  BCF    05.3
0556:  BCF    03.5
0557:  BCF    05.3
.................... 					output_low(relayMed); 
0558:  BSF    03.5
0559:  BCF    05.4
055A:  BCF    03.5
055B:  BCF    05.4
.................... 					output_high(relayMed); 
055C:  BSF    03.5
055D:  BCF    05.4
055E:  BCF    03.5
055F:  BSF    05.4
.................... 					set_tris_a (0x00);	 
0560:  MOVLW  00
0561:  BSF    03.5
0562:  MOVWF  05
.................... 					break; 
0563:  GOTO   58F
.................... 			case 2: output_high (relaylow);					 
0564:  BSF    03.5
0565:  BCF    05.5
0566:  BCF    03.5
0567:  BSF    05.5
.................... 					output_low(relayhigh); 
0568:  BSF    03.5
0569:  BCF    05.3
056A:  BCF    03.5
056B:  BCF    05.3
.................... 					output_high(relayMed); 
056C:  BSF    03.5
056D:  BCF    05.4
056E:  BCF    03.5
056F:  BSF    05.4
.................... 					output_high(relayMed); 
0570:  BSF    03.5
0571:  BCF    05.4
0572:  BCF    03.5
0573:  BSF    05.4
.................... 					set_tris_a (0x10);					 
0574:  MOVLW  10
0575:  BSF    03.5
0576:  MOVWF  05
.................... 					break; 
0577:  GOTO   58F
.................... 			case 3: 
.................... 					output_high(relaylow);					 
0578:  BSF    03.5
0579:  BCF    05.5
057A:  BCF    03.5
057B:  BSF    05.5
.................... 					output_high(relayhigh); 
057C:  BSF    03.5
057D:  BCF    05.3
057E:  BCF    03.5
057F:  BSF    05.3
.................... 					output_high(relayMed); 
0580:  BSF    03.5
0581:  BCF    05.4
0582:  BCF    03.5
0583:  BSF    05.4
.................... 					output_high(relayMed); 
0584:  BSF    03.5
0585:  BCF    05.4
0586:  BCF    03.5
0587:  BSF    05.4
.................... 					set_tris_a (0x10);				 
0588:  MOVLW  10
0589:  BSF    03.5
058A:  MOVWF  05
.................... 					break; 
058B:  GOTO   58F
058C:  BCF    03.5
.................... 			default: 
.................... 					break; 
058D:  BSF    03.5
058E:  GOTO   58F
058F:  BCF    03.5
....................  
.................... 		} 
....................  
.................... 	} 
.................... } 
0590:  RETLW  00
.................... ///////////////////////////////////////////////////////////////// 
....................  
.................... ////////////////////////////////////////////// 
.................... void main() 
.................... {                                                               //// 
*
0D43:  CLRF   04
0D44:  MOVLW  1F
0D45:  ANDWF  03,F
0D46:  BSF    03.5
0D47:  BSF    1F.0
0D48:  BSF    1F.1
0D49:  BSF    1F.2
0D4A:  BCF    1F.3
0D4B:  MOVLW  07
0D4C:  MOVWF  1C
....................  
.................... 	init(); 
*
0D79:  BCF    0A.3
0D7A:  GOTO   4B5
0D7B:  BSF    0A.3
.................... 	setintencity(0,2);	 
0D7C:  CLRF   74
0D7D:  MOVLW  02
0D7E:  MOVWF  75
0D7F:  BCF    0A.3
0D80:  CALL   4EA
0D81:  BSF    0A.3
.................... 	setintencity(0,1); 
0D82:  CLRF   74
0D83:  MOVLW  01
0D84:  MOVWF  75
0D85:  BCF    0A.3
0D86:  CALL   4EA
0D87:  BSF    0A.3
.................... 	checkpasscode(); 
0D88:  BCF    0A.3
0D89:  GOTO   62A
0D8A:  BSF    0A.3
.................... modesel:	 
.................... 	modeselect(); 
0D8B:  BCF    0A.3
0D8C:  GOTO   6A5
0D8D:  BSF    0A.3
.................... 	if(mode > 0) 
0D8E:  MOVF   3B,F
0D8F:  BTFSC  03.2
0D90:  GOTO   597
.................... 	{		 
.................... 		parameterSelectMenu(); 
0D91:  CALL   000
.................... 		setpara(); 
0D92:  GOTO   119
.................... 		if(preMenu ==1) { goto modesel;}	 
0D93:  DECFSZ 58,W
0D94:  GOTO   596
0D95:  GOTO   58B
.................... 	} 
.................... 	else 
0D96:  GOTO   598
.................... 	{ 
.................... 		autoProgSel();	 
0D97:  GOTO   332
.................... 	} 
.................... while(1) 
.................... { 
.................... 	if(running==1) 
0D98:  DECFSZ 3C,W
0D99:  GOTO   772
.................... 	{			 
.................... 								 
.................... 		if(displayupdate == 1) 
0D9A:  DECFSZ 64,W
0D9B:  GOTO   729
.................... 		{ 
.................... 			displayupdate = 0; 
0D9C:  CLRF   64
.................... 			if(dot < 9) 
0D9D:  MOVF   59,W
0D9E:  SUBLW  08
0D9F:  BTFSS  03.0
0DA0:  GOTO   5B3
.................... 			{ 
.................... 				 dot++; 
0DA1:  INCF   59,F
.................... 				 lcd_gotoxy(8+dot,2);		  
0DA2:  MOVLW  08
0DA3:  ADDWF  59,W
0DA4:  MOVWF  74
0DA5:  MOVWF  7E
0DA6:  MOVLW  02
0DA7:  BSF    03.5
0DA8:  MOVWF  20
0DA9:  BCF    0A.3
0DAA:  BCF    03.5
0DAB:  CALL   591
0DAC:  BSF    0A.3
.................... 				 printf(lcd_putc,">");	 
0DAD:  MOVLW  3E
0DAE:  MOVWF  7D
0DAF:  BCF    0A.3
0DB0:  CALL   5BE
0DB1:  BSF    0A.3
.................... 			} 
.................... 			else 
0DB2:  GOTO   5DA
.................... 			{ 
.................... 				lcd_putc("\f"); 
0DB3:  CLRF   74
0DB4:  MOVF   74,W
0DB5:  BCF    0A.3
0DB6:  CALL   091
0DB7:  BSF    0A.3
0DB8:  IORLW  00
0DB9:  BTFSC  03.2
0DBA:  GOTO   5C1
0DBB:  INCF   74,F
0DBC:  MOVWF  7D
0DBD:  BCF    0A.3
0DBE:  CALL   5BE
0DBF:  BSF    0A.3
0DC0:  GOTO   5B4
.................... 				lcd_gotoxy(1,2); 
0DC1:  MOVLW  01
0DC2:  MOVWF  7E
0DC3:  MOVLW  02
0DC4:  BSF    03.5
0DC5:  MOVWF  20
0DC6:  BCF    0A.3
0DC7:  BCF    03.5
0DC8:  CALL   591
0DC9:  BSF    0A.3
.................... 				printf(lcd_putc," Runing "); 
0DCA:  CLRF   74
0DCB:  MOVF   74,W
0DCC:  BCF    0A.3
0DCD:  CALL   097
0DCE:  BSF    0A.3
0DCF:  INCF   74,F
0DD0:  MOVWF  20
0DD1:  MOVWF  7D
0DD2:  BCF    0A.3
0DD3:  CALL   5BE
0DD4:  BSF    0A.3
0DD5:  MOVLW  08
0DD6:  SUBWF  74,W
0DD7:  BTFSS  03.2
0DD8:  GOTO   5CB
.................... 				dot=0; 
0DD9:  CLRF   59
.................... 			} 
.................... 			if(mode ==0) 
0DDA:  MOVF   3B,F
0DDB:  BTFSS  03.2
0DDC:  GOTO   5F2
.................... 			{			 
.................... 				lcd_gotoxy(1,1); 
0DDD:  MOVLW  01
0DDE:  MOVWF  7E
0DDF:  BSF    03.5
0DE0:  MOVWF  20
0DE1:  BCF    0A.3
0DE2:  BCF    03.5
0DE3:  CALL   591
0DE4:  BSF    0A.3
.................... 				preMnu(ProgIndex); 
0DE5:  MOVF   67,W
0DE6:  MOVWF  75
0DE7:  CALL   24E
.................... 				if(currentIntencityBed >0) 
0DE8:  MOVF   5C,F
0DE9:  BTFSC  03.2
0DEA:  GOTO   5ED
.................... 				{					 
.................... 					goto bed2; 
0DEB:  GOTO   634
.................... 				} 
.................... 				else if(currentIntencityMRI>0) 
0DEC:  GOTO   5F1
0DED:  MOVF   5D,F
0DEE:  BTFSC  03.2
0DEF:  GOTO   5F1
.................... 				{				 
.................... 					goto mri2; 
0DF0:  GOTO   6BF
.................... 				}	 
.................... 			 
.................... 			} 
.................... 			else if (mode == 1)  
0DF1:  GOTO   729
0DF2:  DECFSZ 3B,W
0DF3:  GOTO   614
.................... 			{ 
.................... 				lcd_gotoxy(1,1); 
0DF4:  MOVLW  01
0DF5:  MOVWF  7E
0DF6:  BSF    03.5
0DF7:  MOVWF  20
0DF8:  BCF    0A.3
0DF9:  BCF    03.5
0DFA:  CALL   591
0DFB:  BSF    0A.3
.................... 				printf(lcd_putc," MRI+BED:");						 
0DFC:  CLRF   74
0DFD:  MOVF   74,W
0DFE:  BCF    0A.3
0DFF:  CALL   0A4
0E00:  BSF    0A.3
0E01:  INCF   74,F
0E02:  MOVWF  20
0E03:  MOVWF  7D
0E04:  BCF    0A.3
0E05:  CALL   5BE
0E06:  BSF    0A.3
0E07:  MOVLW  09
0E08:  SUBWF  74,W
0E09:  BTFSS  03.2
0E0A:  GOTO   5FD
.................... 				if(dis == 1 ) 
0E0B:  DECFSZ 72,W
0E0C:  GOTO   610
.................... 				{ 
.................... 					dis =0;	 
0E0D:  CLRF   72
.................... 					goto bed1; 
0E0E:  GOTO   620
.................... 				} 
.................... 				else 
0E0F:  GOTO   613
.................... 				{ 
.................... 					dis =1; 
0E10:  MOVLW  01
0E11:  MOVWF  72
.................... 					goto mri1; 
0E12:  GOTO   6AB
.................... 				} 
.................... 			} 
.................... 			else if(mode == 2) 
0E13:  GOTO   729
0E14:  MOVF   3B,W
0E15:  SUBLW  02
0E16:  BTFSS  03.2
0E17:  GOTO   69F
.................... 			{ 
.................... 				lcd_gotoxy(1,1); 
0E18:  MOVLW  01
0E19:  MOVWF  7E
0E1A:  BSF    03.5
0E1B:  MOVWF  20
0E1C:  BCF    0A.3
0E1D:  BCF    03.5
0E1E:  CALL   591
0E1F:  BSF    0A.3
.................... bed1:			printf(lcd_putc," BED:" ); 
0E20:  CLRF   74
0E21:  MOVF   74,W
0E22:  BCF    0A.3
0E23:  CALL   0B2
0E24:  BSF    0A.3
0E25:  INCF   74,F
0E26:  MOVWF  20
0E27:  MOVWF  7D
0E28:  BCF    0A.3
0E29:  CALL   5BE
0E2A:  BSF    0A.3
0E2B:  MOVLW  05
0E2C:  SUBWF  74,W
0E2D:  BTFSS  03.2
0E2E:  GOTO   621
.................... 				displayHighlow(2); 
0E2F:  MOVLW  02
0E30:  MOVWF  74
0E31:  BCF    0A.3
0E32:  CALL   736
0E33:  BSF    0A.3
.................... bed2:			lcd_gotoxy(1,3); 
0E34:  MOVLW  01
0E35:  MOVWF  7E
0E36:  MOVLW  03
0E37:  BSF    03.5
0E38:  MOVWF  20
0E39:  BCF    0A.3
0E3A:  BCF    03.5
0E3B:  CALL   591
0E3C:  BSF    0A.3
.................... 				printf(lcd_putc," Time :%d:%d Freq:%u ",TimerCounterbed-1,miniutCount,bed_intravel); 
0E3D:  MOVLW  01
0E3E:  SUBWF  61,W
0E3F:  MOVWF  74
0E40:  CLRF   75
0E41:  MOVF   75,W
0E42:  BCF    0A.3
0E43:  CALL   0BC
0E44:  BSF    0A.3
0E45:  INCF   75,F
0E46:  MOVWF  20
0E47:  MOVWF  7D
0E48:  BCF    0A.3
0E49:  CALL   5BE
0E4A:  BSF    0A.3
0E4B:  MOVLW  07
0E4C:  SUBWF  75,W
0E4D:  BTFSS  03.2
0E4E:  GOTO   641
0E4F:  MOVF   74,W
0E50:  MOVWF  76
0E51:  MOVLW  1F
0E52:  MOVWF  77
0E53:  CALL   46E
0E54:  MOVLW  3A
0E55:  MOVWF  7D
0E56:  BCF    0A.3
0E57:  CALL   5BE
0E58:  BSF    0A.3
0E59:  MOVF   60,W
0E5A:  MOVWF  76
0E5B:  MOVLW  1F
0E5C:  MOVWF  77
0E5D:  CALL   46E
0E5E:  MOVLW  0C
0E5F:  MOVWF  76
0E60:  MOVF   76,W
0E61:  BCF    0A.3
0E62:  CALL   0BC
0E63:  BSF    0A.3
0E64:  INCF   76,F
0E65:  MOVWF  20
0E66:  MOVWF  7D
0E67:  BCF    0A.3
0E68:  CALL   5BE
0E69:  BSF    0A.3
0E6A:  MOVLW  12
0E6B:  SUBWF  76,W
0E6C:  BTFSS  03.2
0E6D:  GOTO   660
0E6E:  MOVF   73,W
0E6F:  MOVWF  77
0E70:  MOVLW  1B
0E71:  MOVWF  78
0E72:  BCF    0A.3
0E73:  CALL   78A
0E74:  BSF    0A.3
0E75:  MOVLW  20
0E76:  MOVWF  7D
0E77:  BCF    0A.3
0E78:  CALL   5BE
0E79:  BSF    0A.3
.................... 				lcd_gotoxy(1,4); 
0E7A:  MOVLW  01
0E7B:  MOVWF  7E
0E7C:  MOVLW  04
0E7D:  BSF    03.5
0E7E:  MOVWF  20
0E7F:  BCF    0A.3
0E80:  BCF    03.5
0E81:  CALL   591
0E82:  BSF    0A.3
.................... 				printf(lcd_putc," Pulse Count:%lu ",pulseCountbed); 
0E83:  CLRF   74
0E84:  MOVF   74,W
0E85:  BCF    0A.3
0E86:  CALL   0D6
0E87:  BSF    0A.3
0E88:  INCF   74,F
0E89:  MOVWF  20
0E8A:  MOVWF  7D
0E8B:  BCF    0A.3
0E8C:  CALL   5BE
0E8D:  BSF    0A.3
0E8E:  MOVLW  0D
0E8F:  SUBWF  74,W
0E90:  BTFSS  03.2
0E91:  GOTO   684
0E92:  MOVLW  10
0E93:  MOVWF  04
0E94:  MOVF   6D,W
0E95:  MOVWF  76
0E96:  MOVF   6C,W
0E97:  MOVWF  75
0E98:  CALL   4DF
0E99:  MOVLW  20
0E9A:  MOVWF  7D
0E9B:  BCF    0A.3
0E9C:  CALL   5BE
0E9D:  BSF    0A.3
.................... 			} 
.................... 			else if(mode == 3) 
0E9E:  GOTO   729
0E9F:  MOVF   3B,W
0EA0:  SUBLW  03
0EA1:  BTFSS  03.2
0EA2:  GOTO   729
.................... 			{ 
.................... 				lcd_gotoxy(1,1); 
0EA3:  MOVLW  01
0EA4:  MOVWF  7E
0EA5:  BSF    03.5
0EA6:  MOVWF  20
0EA7:  BCF    0A.3
0EA8:  BCF    03.5
0EA9:  CALL   591
0EAA:  BSF    0A.3
.................... mri1:			printf(lcd_putc," MRI:"); 
0EAB:  CLRF   74
0EAC:  MOVF   74,W
0EAD:  BCF    0A.3
0EAE:  CALL   0EC
0EAF:  BSF    0A.3
0EB0:  INCF   74,F
0EB1:  MOVWF  20
0EB2:  MOVWF  7D
0EB3:  BCF    0A.3
0EB4:  CALL   5BE
0EB5:  BSF    0A.3
0EB6:  MOVLW  05
0EB7:  SUBWF  74,W
0EB8:  BTFSS  03.2
0EB9:  GOTO   6AC
.................... 				displayHighlow(6); 
0EBA:  MOVLW  06
0EBB:  MOVWF  74
0EBC:  BCF    0A.3
0EBD:  CALL   736
0EBE:  BSF    0A.3
.................... mri2:			lcd_gotoxy(1,3); 
0EBF:  MOVLW  01
0EC0:  MOVWF  7E
0EC1:  MOVLW  03
0EC2:  BSF    03.5
0EC3:  MOVWF  20
0EC4:  BCF    0A.3
0EC5:  BCF    03.5
0EC6:  CALL   591
0EC7:  BSF    0A.3
.................... 				printf(lcd_putc," Time :%d:%d Freq:%u ",TimerCounterMRI-1,miniutCount,mri_intravel);  
0EC8:  MOVLW  01
0EC9:  SUBWF  62,W
0ECA:  MOVWF  74
0ECB:  CLRF   75
0ECC:  MOVF   75,W
0ECD:  BCF    0A.3
0ECE:  CALL   0BC
0ECF:  BSF    0A.3
0ED0:  INCF   75,F
0ED1:  MOVWF  20
0ED2:  MOVWF  7D
0ED3:  BCF    0A.3
0ED4:  CALL   5BE
0ED5:  BSF    0A.3
0ED6:  MOVLW  07
0ED7:  SUBWF  75,W
0ED8:  BTFSS  03.2
0ED9:  GOTO   6CC
0EDA:  MOVF   74,W
0EDB:  MOVWF  76
0EDC:  MOVLW  1F
0EDD:  MOVWF  77
0EDE:  CALL   46E
0EDF:  MOVLW  3A
0EE0:  MOVWF  7D
0EE1:  BCF    0A.3
0EE2:  CALL   5BE
0EE3:  BSF    0A.3
0EE4:  MOVF   60,W
0EE5:  MOVWF  76
0EE6:  MOVLW  1F
0EE7:  MOVWF  77
0EE8:  CALL   46E
0EE9:  MOVLW  0C
0EEA:  MOVWF  76
0EEB:  MOVF   76,W
0EEC:  BCF    0A.3
0EED:  CALL   0BC
0EEE:  BSF    0A.3
0EEF:  INCF   76,F
0EF0:  MOVWF  20
0EF1:  MOVWF  7D
0EF2:  BCF    0A.3
0EF3:  CALL   5BE
0EF4:  BSF    0A.3
0EF5:  MOVLW  12
0EF6:  SUBWF  76,W
0EF7:  BTFSS  03.2
0EF8:  GOTO   6EB
0EF9:  MOVF   71,W
0EFA:  MOVWF  77
0EFB:  MOVLW  1B
0EFC:  MOVWF  78
0EFD:  BCF    0A.3
0EFE:  CALL   78A
0EFF:  BSF    0A.3
0F00:  MOVLW  20
0F01:  MOVWF  7D
0F02:  BCF    0A.3
0F03:  CALL   5BE
0F04:  BSF    0A.3
.................... 				lcd_gotoxy(1,4); 
0F05:  MOVLW  01
0F06:  MOVWF  7E
0F07:  MOVLW  04
0F08:  BSF    03.5
0F09:  MOVWF  20
0F0A:  BCF    0A.3
0F0B:  BCF    03.5
0F0C:  CALL   591
0F0D:  BSF    0A.3
.................... 				printf(lcd_putc," Pulse Count:%lu ",pulseCountMRI); 
0F0E:  CLRF   74
0F0F:  MOVF   74,W
0F10:  BCF    0A.3
0F11:  CALL   0D6
0F12:  BSF    0A.3
0F13:  INCF   74,F
0F14:  MOVWF  20
0F15:  MOVWF  7D
0F16:  BCF    0A.3
0F17:  CALL   5BE
0F18:  BSF    0A.3
0F19:  MOVLW  0D
0F1A:  SUBWF  74,W
0F1B:  BTFSS  03.2
0F1C:  GOTO   70F
0F1D:  MOVLW  10
0F1E:  MOVWF  04
0F1F:  MOVF   6B,W
0F20:  MOVWF  76
0F21:  MOVF   6A,W
0F22:  MOVWF  75
0F23:  CALL   4DF
0F24:  MOVLW  20
0F25:  MOVWF  7D
0F26:  BCF    0A.3
0F27:  CALL   5BE
0F28:  BSF    0A.3
.................... 			} 
.................... 				 
.................... 		} 
.................... 		if( TimerCounterMRI == 0) 
0F29:  MOVF   62,F
0F2A:  BTFSS  03.2
0F2B:  GOTO   738
.................... 		{			 
.................... 			output_low(TraiacMRI); 
0F2C:  BCF    2F.0
0F2D:  MOVF   2F,W
0F2E:  BSF    03.5
0F2F:  MOVWF  07
0F30:  BCF    03.5
0F31:  BCF    07.0
.................... 			setintencity(0,ChanelMRI);				 
0F32:  CLRF   74
0F33:  MOVLW  02
0F34:  MOVWF  75
0F35:  BCF    0A.3
0F36:  CALL   4EA
0F37:  BSF    0A.3
.................... 		} 
.................... 		if( TimerCounterBed == 0) 
0F38:  MOVF   61,F
0F39:  BTFSS  03.2
0F3A:  GOTO   747
.................... 		{ 
.................... 			output_low(Traiacbed);	 
0F3B:  BCF    2F.1
0F3C:  MOVF   2F,W
0F3D:  BSF    03.5
0F3E:  MOVWF  07
0F3F:  BCF    03.5
0F40:  BCF    07.1
.................... 			setintencity(0,Chanelbed); 
0F41:  CLRF   74
0F42:  MOVLW  01
0F43:  MOVWF  75
0F44:  BCF    0A.3
0F45:  CALL   4EA
0F46:  BSF    0A.3
.................... 		} 
.................... 		if(	TimerCounterBed == 0 && TimerCounterMRI == 0) 
0F47:  MOVF   61,F
0F48:  BTFSS  03.2
0F49:  GOTO   772
0F4A:  MOVF   62,F
0F4B:  BTFSS  03.2
0F4C:  GOTO   772
.................... 		{ 
.................... 			buzCount = 100; 
0F4D:  MOVLW  64
0F4E:  MOVWF  69
.................... 			running =0;				 
0F4F:  CLRF   3C
.................... 			lcd_gotoxy(1,1); 
0F50:  MOVLW  01
0F51:  MOVWF  7E
0F52:  BSF    03.5
0F53:  MOVWF  20
0F54:  BCF    0A.3
0F55:  BCF    03.5
0F56:  CALL   591
0F57:  BSF    0A.3
.................... 			printf(lcd_putc,"\f STOPED"); 
0F58:  CLRF   74
0F59:  MOVF   74,W
0F5A:  BCF    0A.3
0F5B:  CALL   0F6
0F5C:  BSF    0A.3
0F5D:  INCF   74,F
0F5E:  MOVWF  20
0F5F:  MOVWF  7D
0F60:  BCF    0A.3
0F61:  CALL   5BE
0F62:  BSF    0A.3
0F63:  MOVLW  08
0F64:  SUBWF  74,W
0F65:  BTFSS  03.2
0F66:  GOTO   759
.................... 			setparaDefault(); 
0F67:  CALL   539
.................... 			delay_ms(8000); 
0F68:  MOVLW  20
0F69:  MOVWF  74
0F6A:  MOVLW  FA
0F6B:  MOVWF  7E
0F6C:  BCF    0A.3
0F6D:  CALL   3B8
0F6E:  BSF    0A.3
0F6F:  DECFSZ 74,F
0F70:  GOTO   76A
.................... 			goto modesel; 
0F71:  GOTO   58B
.................... 		} 
.................... 	}	 
.................... 	readKey(); 
0F72:  BCF    0A.3
0F73:  CALL   5F0
0F74:  BSF    0A.3
.................... 	k++; 
0F75:  INCF   32,F
.................... 	if(keyPressed==1) 
0F76:  DECFSZ 31,W
0F77:  GOTO   7AF
.................... 	{ 
.................... 		if( keycode== strt) 
0F78:  MOVF   39,W
0F79:  SUBLW  03
0F7A:  BTFSS  03.2
0F7B:  GOTO   7AF
.................... 		{ 
.................... 			output_high(pin_b5);			 
0F7C:  BSF    03.5
0F7D:  BCF    06.5
0F7E:  BCF    03.5
0F7F:  BSF    06.5
.................... 			running =0; 
0F80:  CLRF   3C
.................... 			lcd_gotoxy(1,1);	 
0F81:  MOVLW  01
0F82:  MOVWF  7E
0F83:  BSF    03.5
0F84:  MOVWF  20
0F85:  BCF    0A.3
0F86:  BCF    03.5
0F87:  CALL   591
0F88:  BSF    0A.3
.................... 			setintencity(0,ChanelMRI); 
0F89:  CLRF   74
0F8A:  MOVLW  02
0F8B:  MOVWF  75
0F8C:  BCF    0A.3
0F8D:  CALL   4EA
0F8E:  BSF    0A.3
.................... 			setintencity(0,Chanelbed); 
0F8F:  CLRF   74
0F90:  MOVLW  01
0F91:  MOVWF  75
0F92:  BCF    0A.3
0F93:  CALL   4EA
0F94:  BSF    0A.3
.................... 			printf(lcd_putc,"\f STOPED"); 
0F95:  CLRF   74
0F96:  MOVF   74,W
0F97:  BCF    0A.3
0F98:  CALL   0F6
0F99:  BSF    0A.3
0F9A:  INCF   74,F
0F9B:  MOVWF  20
0F9C:  MOVWF  7D
0F9D:  BCF    0A.3
0F9E:  CALL   5BE
0F9F:  BSF    0A.3
0FA0:  MOVLW  08
0FA1:  SUBWF  74,W
0FA2:  BTFSS  03.2
0FA3:  GOTO   796
.................... 			setparaDefault(); 
0FA4:  CALL   539
.................... 			delay_ms(1000); 
0FA5:  MOVLW  04
0FA6:  MOVWF  74
0FA7:  MOVLW  FA
0FA8:  MOVWF  7E
0FA9:  BCF    0A.3
0FAA:  CALL   3B8
0FAB:  BSF    0A.3
0FAC:  DECFSZ 74,F
0FAD:  GOTO   7A7
.................... 			goto modesel; 
0FAE:  GOTO   58B
....................  
.................... 		} 
.................... 	} 
....................  
.................... } 
0FAF:  GOTO   598
.................... } 
.................... ////////////////////////////////////////////////////////////////////////////////////////////// 
....................  
.................... //////////////////////////////////////////////////////////////////////////////////////////////////// 
....................  
.................... void  readKey() 
.................... { 
0FB0:  SLEEP
.................... 	keyVal =  input_b(); 
*
05F0:  MOVLW  FF
05F1:  BSF    03.5
05F2:  MOVWF  06
05F3:  BCF    03.5
05F4:  MOVF   06,W
05F5:  MOVWF  30
....................     keyVal= keyVal & 0x1f;  
05F6:  MOVLW  1F
05F7:  ANDWF  30,F
.................... 	keyPressed = 1; 
05F8:  MOVLW  01
05F9:  MOVWF  31
.................... 	switch(keyVal) 
.................... 	{ 
05FA:  MOVF   30,W
05FB:  XORLW  1E
05FC:  BTFSC  03.2
05FD:  GOTO   60E
05FE:  XORLW  03
05FF:  BTFSC  03.2
0600:  GOTO   611
0601:  XORLW  06
0602:  BTFSC  03.2
0603:  GOTO   614
0604:  XORLW  0C
0605:  BTFSC  03.2
0606:  GOTO   61B
0607:  XORLW  18
0608:  BTFSC  03.2
0609:  GOTO   622
060A:  XORLW  10
060B:  BTFSC  03.2
060C:  GOTO   625
060D:  GOTO   627
.................... 		case up: 
.................... 		{ 
.................... 			 
.................... 			Keycode = 1;	 
060E:  MOVLW  01
060F:  MOVWF  39
.................... 			 
.................... 			break; 
0610:  GOTO   629
.................... 		} 
.................... 		case down: 
.................... 		{ 
.................... 			 
.................... 			Keycode = 2; 
0611:  MOVLW  02
0612:  MOVWF  39
....................  
.................... 			break; 
0613:  GOTO   629
.................... 		}				 
.................... 		case start: 
.................... 		{ 
.................... 			output_high(pin_b5); 
0614:  BSF    03.5
0615:  BCF    06.5
0616:  BCF    03.5
0617:  BSF    06.5
.................... 			Keycode = 3; 
0618:  MOVLW  03
0619:  MOVWF  39
....................  
.................... 			break; 
061A:  GOTO   629
.................... 		} 
.................... 		case select: 
.................... 		{ 
.................... 				output_high(pin_b5); 
061B:  BSF    03.5
061C:  BCF    06.5
061D:  BCF    03.5
061E:  BSF    06.5
.................... 				Keycode = 4; 
061F:  MOVLW  04
0620:  MOVWF  39
....................  
.................... 			break; 
0621:  GOTO   629
.................... 		}	 
.................... 		case menu: 
.................... 		{ 
.................... 				 
.................... 				Keycode = 5; 
0622:  MOVLW  05
0623:  MOVWF  39
....................  
.................... 			break; 
0624:  GOTO   629
....................  
.................... 		} 
.................... 		case 0x1f: 
.................... 		{ 
.................... 			keyPressed =0; 
0625:  CLRF   31
.................... 			break; 
0626:  GOTO   629
....................  
.................... 		} 
.................... 		default: 
.................... 		{ 
.................... 				keyPressed =0; 
0627:  CLRF   31
.................... 				break; 
0628:  GOTO   629
....................  
.................... 		} 
....................  
.................... 	} 
....................  
....................  
.................... } 
0629:  RETLW  00
.................... ///////////////////////////////////////////////////////////////////////////////////////////// 
....................  
.................... void savepara(void) 
.................... { 
.................... 	//	printf(lcd_putc,"\f"); 
.................... 	//	lcd_gotoxy(1,2); 
.................... 	//	printf(lcd_putc," SAVING VALUES ."); 
.................... 	//	delay_ms(300); 
.................... 	///	lcd_putc("."); 
.................... 	///	delay_ms(300); 
.................... 	///	lcd_putc("."); 
.................... 	///	delay_ms(300); 
.................... 	///	lcd_putc("."); 
.................... 	//	lcd_gotoxy(1,2); 
.................... 		//printf(lcd_putc," VALUES SAVED  ");		 
.................... 	//	delay_ms(600); 
....................  
....................  
.................... } 
*
07D9:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ////////////////////////////////////////////////////////////////////////////////////////////////// 
.................... void checkpasscode(void) 
.................... { 
.................... 	delay_ms(100); 
*
062A:  MOVLW  64
062B:  MOVWF  7E
062C:  CALL   3B8
.................... lable1: 
.................... 	lcd_gotoxy(1,1); 
062D:  MOVLW  01
062E:  MOVWF  7E
062F:  BSF    03.5
0630:  MOVWF  20
0631:  BCF    03.5
0632:  CALL   591
.................... 	printf(lcd_putc,"BIO MED CORPORATION"); 
0633:  CLRF   74
0634:  MOVF   74,W
0635:  CALL   106
0636:  INCF   74,F
0637:  MOVWF  20
0638:  MOVWF  7D
0639:  CALL   5BE
063A:  MOVLW  13
063B:  SUBWF  74,W
063C:  BTFSS  03.2
063D:  GOTO   634
.................... 	lcd_gotoxy(1,2); 
063E:  MOVLW  01
063F:  MOVWF  7E
0640:  MOVLW  02
0641:  BSF    03.5
0642:  MOVWF  20
0643:  BCF    03.5
0644:  CALL   591
.................... 	printf(lcd_putc,"      COCHIN       "); 
0645:  CLRF   74
0646:  MOVF   74,W
0647:  CALL   11E
0648:  INCF   74,F
0649:  MOVWF  20
064A:  MOVWF  7D
064B:  CALL   5BE
064C:  MOVLW  13
064D:  SUBWF  74,W
064E:  BTFSS  03.2
064F:  GOTO   646
.................... 	lcd_gotoxy(1,3); 
0650:  MOVLW  01
0651:  MOVWF  7E
0652:  MOVLW  03
0653:  BSF    03.5
0654:  MOVWF  20
0655:  BCF    03.5
0656:  CALL   591
.................... 	printf(lcd_putc,"   MRI Digi-Pro   "); 
0657:  CLRF   74
0658:  MOVF   74,W
0659:  CALL   136
065A:  INCF   74,F
065B:  MOVWF  20
065C:  MOVWF  7D
065D:  CALL   5BE
065E:  MOVLW  12
065F:  SUBWF  74,W
0660:  BTFSS  03.2
0661:  GOTO   658
.................... 	keyPressed =0; 
0662:  CLRF   31
.................... 	delay_ms(1000); 
0663:  MOVLW  04
0664:  MOVWF  74
0665:  MOVLW  FA
0666:  MOVWF  7E
0667:  CALL   3B8
0668:  DECFSZ 74,F
0669:  GOTO   665
.................... 	while(keyVal != menu) 
.................... 	{ 
066A:  MOVF   30,W
066B:  SUBLW  0F
066C:  BTFSC  03.2
066D:  GOTO   673
.................... 		readKey(); 
066E:  CALL   5F0
.................... 		delay_ms(7); 
066F:  MOVLW  07
0670:  MOVWF  7E
0671:  CALL   3B8
.................... 	} 
0672:  GOTO   66A
.................... 	//lcd_gotoxy(1,4); 
.................... //	printf(lcd_putc,"ENTER PASS CODE:   "); 
.................... //	lcd_send_byte(0,0x0f); 
.................... //	lcd_gotoxy(17,4); 
.................... //	passcode =0; 
.................... //	keyCount =0; 
.................... //	passCodeValue[0] =0; 
.................... //	passCodeValue[1] =0; 
.................... //	passCodeValue[2] =0; 
.................... //	passCodeValue[3] =0; 
.................... 	//while(passcode== 0) 
.................... //	{ 
.................... 	//	readKey(); 
.................... 	//	if(keyPressed==1) 
.................... 	//	{ 
.................... 	//		lcd_gotoxy(17+keyCount,4); 
.................... 	//		printf(lcd_putc,"*");			 
.................... 	//		while(keyPressed==1) 
.................... 	//		{ 
.................... 	//			readKey(); 
.................... 	//			delay_ms(7); 
.................... 	///		} 
.................... 	//		passCodeValue[keyCount] =keycode; 
.................... 	//		keyCount++; 
.................... 	///		delay_ms(200); 
.................... 	///		if(keyCount ==4) 
.................... 	//		{ 
.................... 	//			if(passCodeValue[0]== 3 && passCodeValue[1]== 1 && passCodeValue[2]==5 && passCodeValue[3]==2) 
.................... 	//			{ 
.................... 					printf(lcd_putc,"\f"); 
0673:  MOVLW  0C
0674:  MOVWF  7D
0675:  CALL   5BE
.................... 					lcd_gotoxy(1,2); 
0676:  MOVLW  01
0677:  MOVWF  7E
0678:  MOVLW  02
0679:  BSF    03.5
067A:  MOVWF  20
067B:  BCF    03.5
067C:  CALL   591
.................... 					printf(lcd_putc,"     WELCOME  "); 
067D:  CLRF   74
067E:  MOVF   74,W
067F:  CALL   14D
0680:  INCF   74,F
0681:  MOVWF  20
0682:  MOVWF  7D
0683:  CALL   5BE
0684:  MOVLW  0E
0685:  SUBWF  74,W
0686:  BTFSS  03.2
0687:  GOTO   67E
.................... 						lcd_gotoxy(1,3); 
0688:  MOVLW  01
0689:  MOVWF  7E
068A:  MOVLW  03
068B:  BSF    03.5
068C:  MOVWF  20
068D:  BCF    03.5
068E:  CALL   591
.................... 					printf(lcd_putc,"   MRI Digi-Pro   "); 
068F:  CLRF   74
0690:  MOVF   74,W
0691:  CALL   136
0692:  INCF   74,F
0693:  MOVWF  20
0694:  MOVWF  7D
0695:  CALL   5BE
0696:  MOVLW  12
0697:  SUBWF  74,W
0698:  BTFSS  03.2
0699:  GOTO   690
.................... 					passcode =1; 
069A:  MOVLW  01
069B:  MOVWF  37
.................... 					delay_ms(5000); 
069C:  MOVLW  14
069D:  MOVWF  74
069E:  MOVLW  FA
069F:  MOVWF  7E
06A0:  CALL   3B8
06A1:  DECFSZ 74,F
06A2:  GOTO   69E
.................... 		//		} 
.................... 		//		else 
.................... 		//		{ 
.................... 						//printf(lcd_putc,"\f"); 
.................... 						//lcd_gotoxy(1,2); 
.................... 						//printf(lcd_putc,"   WRONG PASS CODE "); 
.................... 						//delay_ms(2000); 
.................... 				//		goto lable1; 
....................  
.................... 			//	} 
.................... 		//	}			 
.................... //	} 
.................... //	} 
.................... } 
06A3:  BSF    0A.3
06A4:  GOTO   58A (RETURN)
....................  
.................... void parameterSelectMenu(void) 
.................... { 
.................... 	 
.................... 		printf(lcd_putc,"\f");		 
*
0800:  MOVLW  0C
0801:  MOVWF  7D
0802:  BCF    0A.3
0803:  CALL   5BE
0804:  BSF    0A.3
.................... 		lcd_gotoxy(2,4); 
0805:  MOVLW  02
0806:  MOVWF  7E
0807:  MOVLW  04
0808:  BSF    03.5
0809:  MOVWF  20
080A:  BCF    0A.3
080B:  BCF    03.5
080C:  CALL   591
080D:  BSF    0A.3
.................... 		if(mode == 2 || menuIndex >3 )printf(lcd_putc,"Save");	else printf(lcd_putc,"Next");		 
080E:  MOVF   3B,W
080F:  SUBLW  02
0810:  BTFSC  03.2
0811:  GOTO   016
0812:  MOVF   3E,W
0813:  SUBLW  03
0814:  BTFSC  03.0
0815:  GOTO   026
0816:  CLRF   74
0817:  MOVF   74,W
0818:  BCF    0A.3
0819:  CALL   160
081A:  BSF    0A.3
081B:  INCF   74,F
081C:  MOVWF  20
081D:  MOVWF  7D
081E:  BCF    0A.3
081F:  CALL   5BE
0820:  BSF    0A.3
0821:  MOVLW  04
0822:  SUBWF  74,W
0823:  BTFSS  03.2
0824:  GOTO   017
0825:  GOTO   035
0826:  CLRF   74
0827:  MOVF   74,W
0828:  BCF    0A.3
0829:  CALL   169
082A:  BSF    0A.3
082B:  INCF   74,F
082C:  MOVWF  20
082D:  MOVWF  7D
082E:  BCF    0A.3
082F:  CALL   5BE
0830:  BSF    0A.3
0831:  MOVLW  04
0832:  SUBWF  74,W
0833:  BTFSS  03.2
0834:  GOTO   027
.................... 		if(menuIndex < 4){	 
0835:  MOVF   3E,W
0836:  SUBLW  03
0837:  BTFSS  03.0
0838:  GOTO   0A9
.................... 			lcd_gotoxy(16,3); 
0839:  MOVLW  10
083A:  MOVWF  7E
083B:  MOVLW  03
083C:  BSF    03.5
083D:  MOVWF  20
083E:  BCF    0A.3
083F:  BCF    03.5
0840:  CALL   591
0841:  BSF    0A.3
.................... 			displayHighlow(2); 
0842:  MOVLW  02
0843:  MOVWF  74
0844:  BCF    0A.3
0845:  CALL   736
0846:  BSF    0A.3
.................... 			lcd_gotoxy(2,1); 
0847:  MOVLW  02
0848:  MOVWF  7E
0849:  MOVLW  01
084A:  BSF    03.5
084B:  MOVWF  20
084C:  BCF    0A.3
084D:  BCF    03.5
084E:  CALL   591
084F:  BSF    0A.3
.................... 			printf(lcd_putc,"Frequency Bed:%u",para[0]); 
0850:  CLRF   74
0851:  MOVF   74,W
0852:  BCF    0A.3
0853:  CALL   172
0854:  BSF    0A.3
0855:  INCF   74,F
0856:  MOVWF  20
0857:  MOVWF  7D
0858:  BCF    0A.3
0859:  CALL   5BE
085A:  BSF    0A.3
085B:  MOVLW  0E
085C:  SUBWF  74,W
085D:  BTFSS  03.2
085E:  GOTO   051
085F:  MOVF   3F,W
0860:  MOVWF  77
0861:  MOVLW  1B
0862:  MOVWF  78
0863:  BCF    0A.3
0864:  CALL   78A
0865:  BSF    0A.3
.................... 			lcd_gotoxy(2,2); 
0866:  MOVLW  02
0867:  MOVWF  7E
0868:  BSF    03.5
0869:  MOVWF  20
086A:  BCF    0A.3
086B:  BCF    03.5
086C:  CALL   591
086D:  BSF    0A.3
.................... 			printf(lcd_putc,"Time Bed     :%u",para[1]); 
086E:  CLRF   74
086F:  MOVF   74,W
0870:  BCF    0A.3
0871:  CALL   187
0872:  BSF    0A.3
0873:  INCF   74,F
0874:  MOVWF  20
0875:  MOVWF  7D
0876:  BCF    0A.3
0877:  CALL   5BE
0878:  BSF    0A.3
0879:  MOVLW  0E
087A:  SUBWF  74,W
087B:  BTFSS  03.2
087C:  GOTO   06F
087D:  MOVF   40,W
087E:  MOVWF  77
087F:  MOVLW  1B
0880:  MOVWF  78
0881:  BCF    0A.3
0882:  CALL   78A
0883:  BSF    0A.3
.................... 			lcd_gotoxy(2,3); 
0884:  MOVLW  02
0885:  MOVWF  7E
0886:  MOVLW  03
0887:  BSF    03.5
0888:  MOVWF  20
0889:  BCF    0A.3
088A:  BCF    03.5
088B:  CALL   591
088C:  BSF    0A.3
.................... 			printf(lcd_putc,"Intencity Bed:");  
088D:  CLRF   74
088E:  MOVF   74,W
088F:  BCF    0A.3
0890:  CALL   19C
0891:  BSF    0A.3
0892:  INCF   74,F
0893:  MOVWF  20
0894:  MOVWF  7D
0895:  BCF    0A.3
0896:  CALL   5BE
0897:  BSF    0A.3
0898:  MOVLW  0E
0899:  SUBWF  74,W
089A:  BTFSS  03.2
089B:  GOTO   08E
.................... 			lcd_gotoxy(1,menuIndex+1);	 
089C:  MOVLW  01
089D:  ADDWF  3E,W
089E:  MOVWF  74
089F:  MOVLW  01
08A0:  MOVWF  7E
08A1:  MOVF   74,W
08A2:  BSF    03.5
08A3:  MOVWF  20
08A4:  BCF    0A.3
08A5:  BCF    03.5
08A6:  CALL   591
08A7:  BSF    0A.3
.................... 		} 
.................... 		else  
08A8:  GOTO   118
.................... 		{ 
.................... 			lcd_gotoxy(16,3); 
08A9:  MOVLW  10
08AA:  MOVWF  7E
08AB:  MOVLW  03
08AC:  BSF    03.5
08AD:  MOVWF  20
08AE:  BCF    0A.3
08AF:  BCF    03.5
08B0:  CALL   591
08B1:  BSF    0A.3
.................... 			displayHighlow(6); 
08B2:  MOVLW  06
08B3:  MOVWF  74
08B4:  BCF    0A.3
08B5:  CALL   736
08B6:  BSF    0A.3
.................... 			lcd_gotoxy(2,1);	 
08B7:  MOVLW  02
08B8:  MOVWF  7E
08B9:  MOVLW  01
08BA:  BSF    03.5
08BB:  MOVWF  20
08BC:  BCF    0A.3
08BD:  BCF    03.5
08BE:  CALL   591
08BF:  BSF    0A.3
.................... 			printf(lcd_putc,"Frequency MRI:%u"para[4] ); 
08C0:  CLRF   74
08C1:  MOVF   74,W
08C2:  BCF    0A.3
08C3:  CALL   1AF
08C4:  BSF    0A.3
08C5:  INCF   74,F
08C6:  MOVWF  20
08C7:  MOVWF  7D
08C8:  BCF    0A.3
08C9:  CALL   5BE
08CA:  BSF    0A.3
08CB:  MOVLW  0E
08CC:  SUBWF  74,W
08CD:  BTFSS  03.2
08CE:  GOTO   0C1
08CF:  MOVF   43,W
08D0:  MOVWF  77
08D1:  MOVLW  1B
08D2:  MOVWF  78
08D3:  BCF    0A.3
08D4:  CALL   78A
08D5:  BSF    0A.3
.................... 			lcd_gotoxy(2,2); 
08D6:  MOVLW  02
08D7:  MOVWF  7E
08D8:  BSF    03.5
08D9:  MOVWF  20
08DA:  BCF    0A.3
08DB:  BCF    03.5
08DC:  CALL   591
08DD:  BSF    0A.3
.................... 			printf(lcd_putc,"Time MRI     :%u",para[5]); 
08DE:  CLRF   74
08DF:  MOVF   74,W
08E0:  BCF    0A.3
08E1:  CALL   1C4
08E2:  BSF    0A.3
08E3:  INCF   74,F
08E4:  MOVWF  20
08E5:  MOVWF  7D
08E6:  BCF    0A.3
08E7:  CALL   5BE
08E8:  BSF    0A.3
08E9:  MOVLW  0E
08EA:  SUBWF  74,W
08EB:  BTFSS  03.2
08EC:  GOTO   0DF
08ED:  MOVF   44,W
08EE:  MOVWF  77
08EF:  MOVLW  1B
08F0:  MOVWF  78
08F1:  BCF    0A.3
08F2:  CALL   78A
08F3:  BSF    0A.3
.................... 			lcd_gotoxy(2,3); 
08F4:  MOVLW  02
08F5:  MOVWF  7E
08F6:  MOVLW  03
08F7:  BSF    03.5
08F8:  MOVWF  20
08F9:  BCF    0A.3
08FA:  BCF    03.5
08FB:  CALL   591
08FC:  BSF    0A.3
.................... 			printf(lcd_putc,"Intencity MRI:"); 
08FD:  CLRF   74
08FE:  MOVF   74,W
08FF:  BCF    0A.3
0900:  CALL   1D9
0901:  BSF    0A.3
0902:  INCF   74,F
0903:  MOVWF  20
0904:  MOVWF  7D
0905:  BCF    0A.3
0906:  CALL   5BE
0907:  BSF    0A.3
0908:  MOVLW  0E
0909:  SUBWF  74,W
090A:  BTFSS  03.2
090B:  GOTO   0FE
.................... 			lcd_gotoxy(1,menuIndex-3); 
090C:  MOVLW  03
090D:  SUBWF  3E,W
090E:  MOVWF  74
090F:  MOVLW  01
0910:  MOVWF  7E
0911:  MOVF   74,W
0912:  BSF    03.5
0913:  MOVWF  20
0914:  BCF    0A.3
0915:  BCF    03.5
0916:  CALL   591
0917:  BSF    0A.3
.................... 		} 
....................  
....................  
.................... } 
0918:  RETLW  00
....................  
....................  
.................... //////////////////////////////////////////////////////////////// 
.................... void setpara(void) 
.................... { 
.................... 	 
.................... 	if (mode == 1) 
0919:  DECFSZ 3B,W
091A:  GOTO   120
.................... 	{ 
.................... 		menuIndexMin =0; 
091B:  CLRF   6F
.................... 		menuIndexMax =3 ; 
091C:  MOVLW  03
091D:  MOVWF  70
.................... 		menuIndex=0; 
091E:  CLRF   3E
....................  
.................... 	} 
.................... 	else if(mode == 2) 
091F:  GOTO   133
0920:  MOVF   3B,W
0921:  SUBLW  02
0922:  BTFSS  03.2
0923:  GOTO   129
.................... 	{ 
.................... 		menuIndexMin =0; 
0924:  CLRF   6F
.................... 		menuIndexMax =3; 
0925:  MOVLW  03
0926:  MOVWF  70
.................... 		menuIndex=0; 
0927:  CLRF   3E
....................  
.................... 	} 
.................... 	else if (mode == 3) 
0928:  GOTO   133
0929:  MOVF   3B,W
092A:  SUBLW  03
092B:  BTFSS  03.2
092C:  GOTO   133
.................... 	{ 
.................... 		menuIndexMin =4; 
092D:  MOVLW  04
092E:  MOVWF  6F
.................... 		menuIndexMax =7 ; 
092F:  MOVLW  07
0930:  MOVWF  70
.................... 		menuIndex=4; 
0931:  MOVLW  04
0932:  MOVWF  3E
.................... 	 
....................  
.................... 	} 
.................... 	parameterSelectMenu();	 
0933:  CALL   000
.................... 	lcd_send_byte(0,0x0f); 
0934:  BSF    03.5
0935:  CLRF   22
0936:  MOVLW  0F
0937:  MOVWF  23
0938:  BCF    0A.3
0939:  BCF    03.5
093A:  CALL   414
093B:  BSF    0A.3
.................... 	Running =0; 
093C:  CLRF   3C
.................... 	MenuSelected=0;		 
093D:  CLRF   3D
.................... 	while(Running == 0) 
.................... 	{ 
093E:  MOVF   3C,F
093F:  BTFSS  03.2
0940:  GOTO   24C
.................... 		readKey(); 
0941:  BCF    0A.3
0942:  CALL   5F0
0943:  BSF    0A.3
.................... 		ctpress =100; 
0944:  MOVLW  64
0945:  MOVWF  57
.................... xxx: 
.................... 		if(keyPressed==1) 
0946:  DECFSZ 31,W
0947:  GOTO   24B
.................... 		{ 
.................... 			 
.................... 		if(keycode == mnu) 
0948:  MOVF   39,W
0949:  SUBLW  05
094A:  BTFSS  03.2
094B:  GOTO   14F
.................... 			{ 
.................... 			   preMenu = 1; 
094C:  MOVLW  01
094D:  MOVWF  58
.................... 				return;		 
094E:  GOTO   24C
.................... 							 
.................... 			} 
.................... 			if(MenuSelected == 0) 
094F:  MOVF   3D,F
0950:  BTFSS  03.2
0951:  GOTO   195
.................... 			{ 
.................... 				if(keycode==ups) 
0952:  DECFSZ 39,W
0953:  GOTO   15E
.................... 				{ 
.................... 					if(menuIndex < menuIndexMax){menuIndex++;} 
0954:  MOVF   70,W
0955:  SUBWF  3E,W
0956:  BTFSS  03.0
0957:  INCF   3E,F
.................... 					pointcur(1);				 
0958:  MOVLW  01
0959:  MOVWF  74
095A:  BCF    0A.3
095B:  CALL   7BF
095C:  BSF    0A.3
.................... 					//lcd_send_byte(0,0x0f); 
.................... 					//parameterSelectMenu();				 
.................... 				} 
.................... 				else if(dwn== keycode) 
095D:  GOTO   16B
095E:  MOVF   39,W
095F:  SUBLW  02
0960:  BTFSS  03.2
0961:  GOTO   16B
.................... 				{ 
.................... 					if(menuIndex > menuIndexMin){menuIndex--;}	 
0962:  MOVF   3E,W
0963:  SUBWF  6F,W
0964:  BTFSS  03.0
0965:  DECF   3E,F
.................... 					pointcur(1);				 
0966:  MOVLW  01
0967:  MOVWF  74
0968:  BCF    0A.3
0969:  CALL   7BF
096A:  BSF    0A.3
.................... 					//lcd_send_byte(0,0x0f); 
.................... 					//parameterSelectMenu();		 
.................... 				} 
.................... 				 
.................... 				 if(keycode == sle) 
096B:  MOVF   39,W
096C:  SUBLW  04
096D:  BTFSS  03.2
096E:  GOTO   194
.................... 				{ 
.................... 					if(menuIndex== menuIndexMax ) 
096F:  MOVF   70,W
0970:  SUBWF  3E,W
0971:  BTFSS  03.2
0972:  GOTO   185
.................... 					{ 
.................... 						if(mode== 1) 
0973:  DECFSZ 3B,W
0974:  GOTO   17B
.................... 						{ 
.................... 								menuIndexMin =4; 
0975:  MOVLW  04
0976:  MOVWF  6F
.................... 								menuIndexMax =7 ; 
0977:  MOVLW  07
0978:  MOVWF  70
.................... 								menuIndex=4; 
0979:  MOVLW  04
097A:  MOVWF  3E
.................... 						} 
.................... 						savepara(); 
097B:  BCF    0A.3
097C:  CALL   7D9
097D:  BSF    0A.3
.................... 						parameterSelectMenu(); 
097E:  CALL   000
.................... 						pointcur(1); 
097F:  MOVLW  01
0980:  MOVWF  74
0981:  BCF    0A.3
0982:  CALL   7BF
0983:  BSF    0A.3
.................... 					} 
.................... 					else 
0984:  GOTO   194
.................... 					{ 
.................... 						pointcur(16); 
0985:  MOVLW  10
0986:  MOVWF  74
0987:  BCF    0A.3
0988:  CALL   7BF
0989:  BSF    0A.3
.................... 						lcd_send_byte(0,0x0f);				 
098A:  BSF    03.5
098B:  CLRF   22
098C:  MOVLW  0F
098D:  MOVWF  23
098E:  BCF    0A.3
098F:  BCF    03.5
0990:  CALL   414
0991:  BSF    0A.3
.................... 						MenuSelected =1; 
0992:  MOVLW  01
0993:  MOVWF  3D
.................... 					}		 
.................... 					 
.................... 				} 
.................... 				 
.................... 			} 
.................... 			else 
0994:  GOTO   203
.................... 			{ 
.................... 				if(keycode == sle) 
0995:  MOVF   39,W
0996:  SUBLW  04
0997:  BTFSS  03.2
0998:  GOTO   1A8
.................... 				{ 
.................... 					MenuSelected =0; 
0999:  CLRF   3D
.................... 					pointcur(1); 
099A:  MOVLW  01
099B:  MOVWF  74
099C:  BCF    0A.3
099D:  CALL   7BF
099E:  BSF    0A.3
.................... 					lcd_send_byte(0,0x0f); 
099F:  BSF    03.5
09A0:  CLRF   22
09A1:  MOVLW  0F
09A2:  MOVWF  23
09A3:  BCF    0A.3
09A4:  BCF    03.5
09A5:  CALL   414
09A6:  BSF    0A.3
.................... 				} 
.................... 				else 
09A7:  GOTO   203
.................... 				{ 
.................... 					 if(keycode==dwn) 
09A8:  MOVF   39,W
09A9:  SUBLW  02
09AA:  BTFSS  03.2
09AB:  GOTO   1BD
.................... 					{ 
.................... 					 
.................... 							if(para[menuIndex]< paraLimitHigh[menuIndex]){para[menuIndex]++;} 
09AC:  MOVLW  3F
09AD:  ADDWF  3E,W
09AE:  MOVWF  04
09AF:  MOVF   00,W
09B0:  MOVWF  74
09B1:  MOVLW  4F
09B2:  ADDWF  3E,W
09B3:  MOVWF  04
09B4:  MOVF   00,W
09B5:  SUBWF  74,W
09B6:  BTFSC  03.0
09B7:  GOTO   1BC
09B8:  MOVLW  3F
09B9:  ADDWF  3E,W
09BA:  MOVWF  04
09BB:  INCF   00,F
.................... 							//else {para[menuIndex]=paraLimitHigh[menuIndex];}					 
.................... 						 
.................... 					} 
.................... 					else if(ups== keycode) 
09BC:  GOTO   1D1
09BD:  DECFSZ 39,W
09BE:  GOTO   1D1
.................... 					{ 
.................... 						 
.................... 							if(para[menuIndex]> paraLimitLow[menuIndex]){para[menuIndex]--;} 
09BF:  MOVLW  3F
09C0:  ADDWF  3E,W
09C1:  MOVWF  04
09C2:  MOVF   00,W
09C3:  MOVWF  74
09C4:  MOVLW  47
09C5:  ADDWF  3E,W
09C6:  MOVWF  04
09C7:  MOVF   00,W
09C8:  SUBWF  74,W
09C9:  BTFSC  03.2
09CA:  GOTO   1D1
09CB:  BTFSS  03.0
09CC:  GOTO   1D1
09CD:  MOVLW  3F
09CE:  ADDWF  3E,W
09CF:  MOVWF  04
09D0:  DECF   00,F
.................... 							//else {para[menuIndex]=paraLimitlow[menuIndex];}					 
.................... 					}				 
.................... 					if(menuIndex==2||menuIndex==6) 
09D1:  MOVF   3E,W
09D2:  SUBLW  02
09D3:  BTFSC  03.2
09D4:  GOTO   1D9
09D5:  MOVF   3E,W
09D6:  SUBLW  06
09D7:  BTFSS  03.2
09D8:  GOTO   1E9
.................... 					{	 
.................... 						pointcur(16);					 
09D9:  MOVLW  10
09DA:  MOVWF  74
09DB:  BCF    0A.3
09DC:  CALL   7BF
09DD:  BSF    0A.3
.................... 						displayHighlow(menuIndex); 
09DE:  MOVF   3E,W
09DF:  MOVWF  74
09E0:  BCF    0A.3
09E1:  CALL   736
09E2:  BSF    0A.3
.................... 						pointcur(16);						 
09E3:  MOVLW  10
09E4:  MOVWF  74
09E5:  BCF    0A.3
09E6:  CALL   7BF
09E7:  BSF    0A.3
.................... 					} 
.................... 					else  
09E8:  GOTO   203
.................... 					{ 
.................... 					 
.................... 						pointcur(16); 
09E9:  MOVLW  10
09EA:  MOVWF  74
09EB:  BCF    0A.3
09EC:  CALL   7BF
09ED:  BSF    0A.3
.................... 						printf(lcd_putc,"%u ",para[menuIndex]); 
09EE:  MOVLW  3F
09EF:  ADDWF  3E,W
09F0:  MOVWF  04
09F1:  MOVF   00,W
09F2:  MOVWF  74
09F3:  MOVWF  77
09F4:  MOVLW  1B
09F5:  MOVWF  78
09F6:  BCF    0A.3
09F7:  CALL   78A
09F8:  BSF    0A.3
09F9:  MOVLW  20
09FA:  MOVWF  7D
09FB:  BCF    0A.3
09FC:  CALL   5BE
09FD:  BSF    0A.3
.................... 						pointcur(16);						 
09FE:  MOVLW  10
09FF:  MOVWF  74
0A00:  BCF    0A.3
0A01:  CALL   7BF
0A02:  BSF    0A.3
.................... 					} 
.................... 				}			 
.................... 			 
.................... 			} 
.................... 			if(strt== keycode) 
0A03:  MOVF   39,W
0A04:  SUBLW  03
0A05:  BTFSS  03.2
0A06:  GOTO   235
.................... 			{ 
.................... 				TimerCounterMRI = para[5]; 
0A07:  MOVF   44,W
0A08:  MOVWF  62
.................... 				TimerCounterBed = para[1];			 
0A09:  MOVF   40,W
0A0A:  MOVWF  61
.................... 				setintencity(para[2],Chanelbed); 
0A0B:  MOVF   41,W
0A0C:  MOVWF  74
0A0D:  MOVLW  01
0A0E:  MOVWF  75
0A0F:  BCF    0A.3
0A10:  CALL   4EA
0A11:  BSF    0A.3
.................... 				setintencity(para[6],ChanelMRI); 
0A12:  MOVF   45,W
0A13:  MOVWF  74
0A14:  MOVLW  02
0A15:  MOVWF  75
0A16:  BCF    0A.3
0A17:  CALL   4EA
0A18:  BSF    0A.3
.................... 				miniutCount=59; 
0A19:  MOVLW  3B
0A1A:  MOVWF  60
.................... 				Mri_intravel =para[4]; 
0A1B:  MOVF   43,W
0A1C:  MOVWF  71
.................... 				bed_intravel = para[0]; 
0A1D:  MOVF   3F,W
0A1E:  MOVWF  73
.................... 				savepara(); 
0A1F:  BCF    0A.3
0A20:  CALL   7D9
0A21:  BSF    0A.3
.................... 				MenuSelected =0; 
0A22:  CLRF   3D
.................... 				ModeSelected =1; 
0A23:  MOVLW  01
0A24:  MOVWF  3A
.................... 				Running = 1;	 
0A25:  MOVWF  3C
.................... 				preMenu =0; 
0A26:  CLRF   58
.................... 				pulseCountMRI =0; 
0A27:  CLRF   6B
0A28:  CLRF   6A
.................... 				pulseCountBed =0; 
0A29:  CLRF   6D
0A2A:  CLRF   6C
.................... 				dot= 9; 
0A2B:  MOVLW  09
0A2C:  MOVWF  59
.................... 				lcd_send_byte(0,0x0c); 
0A2D:  BSF    03.5
0A2E:  CLRF   22
0A2F:  MOVLW  0C
0A30:  MOVWF  23
0A31:  BCF    0A.3
0A32:  BCF    03.5
0A33:  CALL   414
0A34:  BSF    0A.3
.................... 			} 
.................... 			while(keyPressed==1 ) 
.................... 			{ 
0A35:  DECFSZ 31,W
0A36:  GOTO   24B
.................... 				readKey(); 
0A37:  BCF    0A.3
0A38:  CALL   5F0
0A39:  BSF    0A.3
.................... 				ctpress--; 
0A3A:  DECFSZ 57,F
.................... 				if (ctpress == 0) 
0A3B:  GOTO   245
.................... 				{ 
.................... 					ctpress=1; 
0A3C:  MOVLW  01
0A3D:  MOVWF  57
.................... 					delay_ms(100); 
0A3E:  MOVLW  64
0A3F:  MOVWF  7E
0A40:  BCF    0A.3
0A41:  CALL   3B8
0A42:  BSF    0A.3
.................... 					goto xxx;					 
0A43:  GOTO   146
.................... 				} 
.................... 				else 
0A44:  GOTO   24A
.................... 				{ 
.................... 					delay_ms(7); 
0A45:  MOVLW  07
0A46:  MOVWF  7E
0A47:  BCF    0A.3
0A48:  CALL   3B8
0A49:  BSF    0A.3
.................... 				} 
.................... 			}				 
0A4A:  GOTO   235
.................... 			 
.................... 		} 
....................  
.................... 	} 
0A4B:  GOTO   13E
.................... } 
0A4C:  BSF    0A.3
0A4D:  GOTO   593 (RETURN)
....................  
.................... //////////////////////////////// 
....................  
.................... void pointcur(char ax) 
.................... { 
.................... 	if(menuIndex <4) 
*
07BF:  MOVF   3E,W
07C0:  SUBLW  03
07C1:  BTFSS  03.0
07C2:  GOTO   7CE
.................... 	{ 
.................... 		lcd_gotoxy(ax,menuIndex+1); 
07C3:  MOVLW  01
07C4:  ADDWF  3E,W
07C5:  MOVWF  75
07C6:  MOVF   74,W
07C7:  MOVWF  7E
07C8:  MOVF   75,W
07C9:  BSF    03.5
07CA:  MOVWF  20
07CB:  BCF    03.5
07CC:  CALL   591
.................... 	} 
.................... 	else 
07CD:  GOTO   7D8
.................... 	{ 
.................... 		lcd_gotoxy(ax,menuIndex-3); 
07CE:  MOVLW  03
07CF:  SUBWF  3E,W
07D0:  MOVWF  75
07D1:  MOVF   74,W
07D2:  MOVWF  7E
07D3:  MOVF   75,W
07D4:  BSF    03.5
07D5:  MOVWF  20
07D6:  BCF    03.5
07D7:  CALL   591
.................... 	} 
.................... } 
07D8:  RETLW  00
....................  
.................... /////////////////////////////////////////////////////////// 
.................... void modeselect(void) 
.................... {	 
.................... 	printf(lcd_putc,"\f"); 
*
06A5:  MOVLW  0C
06A6:  MOVWF  7D
06A7:  CALL   5BE
.................... 	lcd_gotoxy(2,1); 
06A8:  MOVLW  02
06A9:  MOVWF  7E
06AA:  MOVLW  01
06AB:  BSF    03.5
06AC:  MOVWF  20
06AD:  BCF    03.5
06AE:  CALL   591
.................... 	printf(lcd_putc,"Pre Programed");	 
06AF:  CLRF   74
06B0:  MOVF   74,W
06B1:  CALL   1EC
06B2:  INCF   74,F
06B3:  MOVWF  20
06B4:  MOVWF  7D
06B5:  CALL   5BE
06B6:  MOVLW  0D
06B7:  SUBWF  74,W
06B8:  BTFSS  03.2
06B9:  GOTO   6B0
.................... 	lcd_gotoxy(2,2); 
06BA:  MOVLW  02
06BB:  MOVWF  7E
06BC:  BSF    03.5
06BD:  MOVWF  20
06BE:  BCF    03.5
06BF:  CALL   591
.................... 	printf(lcd_putc,"Bed+MRI"); 
06C0:  CLRF   74
06C1:  MOVF   74,W
06C2:  CALL   1FE
06C3:  INCF   74,F
06C4:  MOVWF  20
06C5:  MOVWF  7D
06C6:  CALL   5BE
06C7:  MOVLW  07
06C8:  SUBWF  74,W
06C9:  BTFSS  03.2
06CA:  GOTO   6C1
.................... 	lcd_gotoxy(2,3); 
06CB:  MOVLW  02
06CC:  MOVWF  7E
06CD:  MOVLW  03
06CE:  BSF    03.5
06CF:  MOVWF  20
06D0:  BCF    03.5
06D1:  CALL   591
.................... 	printf(lcd_putc,"Bed only"); 
06D2:  CLRF   74
06D3:  MOVF   74,W
06D4:  CALL   20A
06D5:  INCF   74,F
06D6:  MOVWF  20
06D7:  MOVWF  7D
06D8:  CALL   5BE
06D9:  MOVLW  08
06DA:  SUBWF  74,W
06DB:  BTFSS  03.2
06DC:  GOTO   6D3
.................... 	lcd_gotoxy(2,4); 
06DD:  MOVLW  02
06DE:  MOVWF  7E
06DF:  MOVLW  04
06E0:  BSF    03.5
06E1:  MOVWF  20
06E2:  BCF    03.5
06E3:  CALL   591
.................... 	printf(lcd_putc,"MRI only"); 
06E4:  CLRF   74
06E5:  MOVF   74,W
06E6:  CALL   217
06E7:  INCF   74,F
06E8:  MOVWF  20
06E9:  MOVWF  7D
06EA:  CALL   5BE
06EB:  MOVLW  08
06EC:  SUBWF  74,W
06ED:  BTFSS  03.2
06EE:  GOTO   6E5
.................... 	ModeSelected =0; 
06EF:  CLRF   3A
.................... 	lcd_send_byte(0,0x0f); 
06F0:  BSF    03.5
06F1:  CLRF   22
06F2:  MOVLW  0F
06F3:  MOVWF  23
06F4:  BCF    03.5
06F5:  CALL   414
.................... 	mode = 0; 
06F6:  CLRF   3B
.................... 	lcd_gotoxy(1,1); 
06F7:  MOVLW  01
06F8:  MOVWF  7E
06F9:  BSF    03.5
06FA:  MOVWF  20
06FB:  BCF    03.5
06FC:  CALL   591
.................... 	while(ModeSelected== 0) 
.................... 	{ 
06FD:  MOVF   3A,F
06FE:  BTFSS  03.2
06FF:  GOTO   734
.................... 		readKey(); 
0700:  CALL   5F0
.................... 		if(keyPressed==1) 
0701:  DECFSZ 31,W
0702:  GOTO   733
.................... 		{ 
.................... 			if(keycode == ups) 
0703:  DECFSZ 39,W
0704:  GOTO   714
.................... 			{ 
.................... 				if(mode<3) {mode++;} 
0705:  MOVF   3B,W
0706:  SUBLW  02
0707:  BTFSC  03.0
0708:  INCF   3B,F
.................... 				lcd_gotoxy(1,mode+1);			 
0709:  MOVLW  01
070A:  ADDWF  3B,W
070B:  MOVWF  74
070C:  MOVLW  01
070D:  MOVWF  7E
070E:  MOVF   74,W
070F:  BSF    03.5
0710:  MOVWF  20
0711:  BCF    03.5
0712:  CALL   591
.................... 			} 
.................... 			else if(keycode== dwn) 
0713:  GOTO   72C
0714:  MOVF   39,W
0715:  SUBLW  02
0716:  BTFSS  03.2
0717:  GOTO   726
.................... 			{ 
.................... 					if(mode>0) {mode--;} 
0718:  MOVF   3B,F
0719:  BTFSS  03.2
071A:  DECF   3B,F
.................... 					lcd_gotoxy(1,mode+1); 
071B:  MOVLW  01
071C:  ADDWF  3B,W
071D:  MOVWF  74
071E:  MOVLW  01
071F:  MOVWF  7E
0720:  MOVF   74,W
0721:  BSF    03.5
0722:  MOVWF  20
0723:  BCF    03.5
0724:  CALL   591
.................... 			} 
.................... 			else if(keycode== SLE) 
0725:  GOTO   72C
0726:  MOVF   39,W
0727:  SUBLW  04
0728:  BTFSS  03.2
0729:  GOTO   72C
.................... 			{ 
.................... 				ModeSelected = 1; 
072A:  MOVLW  01
072B:  MOVWF  3A
.................... 			}			 
.................... 			while(keyPressed==1) 
.................... 			{ 
072C:  DECFSZ 31,W
072D:  GOTO   733
.................... 				readKey(); 
072E:  CALL   5F0
.................... 				delay_ms(7); 
072F:  MOVLW  07
0730:  MOVWF  7E
0731:  CALL   3B8
.................... 			}		 
0732:  GOTO   72C
.................... 			 
.................... 		} 
....................  
.................... 	} 
0733:  GOTO   6FD
.................... } 
0734:  BSF    0A.3
0735:  GOTO   58D (RETURN)
....................  
.................... //////////////////////////////////////////////////////////////////////////////////////////////////// 
.................... void init(void) 
.................... { 
.................... 	 
....................   	setup_adc_ports(NO_ANALOGS); 
*
04B5:  BSF    03.5
04B6:  BSF    1F.0
04B7:  BSF    1F.1
04B8:  BSF    1F.2
04B9:  BCF    1F.3
....................     setup_adc(ADC_OFF); 
04BA:  BCF    03.5
04BB:  BCF    1F.0
.................... 	setup_spi(SPI_SS_DISABLED);		  
04BC:  BCF    14.5
04BD:  BCF    2F.5
04BE:  MOVF   2F,W
04BF:  BSF    03.5
04C0:  MOVWF  07
04C1:  BCF    03.5
04C2:  BSF    2F.4
04C3:  MOVF   2F,W
04C4:  BSF    03.5
04C5:  MOVWF  07
04C6:  BCF    03.5
04C7:  BCF    2F.3
04C8:  MOVF   2F,W
04C9:  BSF    03.5
04CA:  MOVWF  07
04CB:  MOVLW  01
04CC:  BCF    03.5
04CD:  MOVWF  14
04CE:  MOVLW  00
04CF:  BSF    03.5
04D0:  MOVWF  14
.................... 	lcd_init(); 
04D1:  BCF    03.5
04D2:  CALL   45C
.................... 	lcd_init(); 
04D3:  CALL   45C
.................... 	setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);	 
04D4:  MOVLW  B5
04D5:  MOVWF  10
....................     setup_timer_0(RTCC_INTERNAL|RTCC_DIV_128); 
04D6:  BSF    03.5
04D7:  MOVF   01,W
04D8:  ANDLW  C0
04D9:  IORLW  06
04DA:  MOVWF  01
.................... 	enable_interrupts(INT_TIMER1); 
04DB:  BSF    0C.0
.................... 	enable_interrupts(INT_RTCC);	 
04DC:  BCF    03.5
04DD:  BSF    0B.5
.................... 	DISable_interrupts(INT_AD); 
04DE:  BSF    03.5
04DF:  BCF    0C.6
.................... 	secondCount =2;	 
04E0:  MOVLW  02
04E1:  BCF    03.5
04E2:  MOVWF  5F
.................... 	ProgIndex =0; 
04E3:  CLRF   67
.................... 	miniutCount =1; 
04E4:  MOVLW  01
04E5:  MOVWF  60
.................... 	enable_interrupts(GLOBAL); 
04E6:  MOVLW  C0
04E7:  IORWF  0B,F
....................  
.................... } 
04E8:  BSF    0A.3
04E9:  GOTO   57B (RETURN)
....................  
....................  
....................  
.................... //////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
....................  
....................  
....................  
.................... void preMnu(char nameIndex) 
.................... { 
....................  
.................... 	switch(nameIndex) 
.................... 	{ 
*
0A4E:  MOVF   75,W
0A4F:  XORLW  00
0A50:  BTFSC  03.2
0A51:  GOTO   271
0A52:  XORLW  01
0A53:  BTFSC  03.2
0A54:  GOTO   281
0A55:  XORLW  03
0A56:  BTFSC  03.2
0A57:  GOTO   291
0A58:  XORLW  01
0A59:  BTFSC  03.2
0A5A:  GOTO   2A1
0A5B:  XORLW  07
0A5C:  BTFSC  03.2
0A5D:  GOTO   2B1
0A5E:  XORLW  01
0A5F:  BTFSC  03.2
0A60:  GOTO   2C1
0A61:  XORLW  03
0A62:  BTFSC  03.2
0A63:  GOTO   2D1
0A64:  XORLW  01
0A65:  BTFSC  03.2
0A66:  GOTO   2E1
0A67:  XORLW  0F
0A68:  BTFSC  03.2
0A69:  GOTO   2F1
0A6A:  XORLW  01
0A6B:  BTFSC  03.2
0A6C:  GOTO   301
0A6D:  XORLW  03
0A6E:  BTFSC  03.2
0A6F:  GOTO   311
0A70:  GOTO   321
.................... 		case 0:{printf(lcd_putc," ACUTE STRESS DISOR..");      break;}  
0A71:  CLRF   76
0A72:  MOVF   76,W
0A73:  BCF    0A.3
0A74:  CALL   224
0A75:  BSF    0A.3
0A76:  INCF   76,F
0A77:  MOVWF  20
0A78:  MOVWF  7D
0A79:  BCF    0A.3
0A7A:  CALL   5BE
0A7B:  BSF    0A.3
0A7C:  MOVLW  15
0A7D:  SUBWF  76,W
0A7E:  BTFSS  03.2
0A7F:  GOTO   272
0A80:  GOTO   331
.................... 		case 1:{printf(lcd_putc," ADJUSTMENT DISORDER ");    break;}  
0A81:  CLRF   76
0A82:  MOVF   76,W
0A83:  BCF    0A.3
0A84:  CALL   23E
0A85:  BSF    0A.3
0A86:  INCF   76,F
0A87:  MOVWF  20
0A88:  MOVWF  7D
0A89:  BCF    0A.3
0A8A:  CALL   5BE
0A8B:  BSF    0A.3
0A8C:  MOVLW  15
0A8D:  SUBWF  76,W
0A8E:  BTFSS  03.2
0A8F:  GOTO   282
0A90:  GOTO   331
.................... 		case 2:{printf(lcd_putc," AGORAPHOBIA         ");    break;}  
0A91:  CLRF   76
0A92:  MOVF   76,W
0A93:  BCF    0A.3
0A94:  CALL   258
0A95:  BSF    0A.3
0A96:  INCF   76,F
0A97:  MOVWF  20
0A98:  MOVWF  7D
0A99:  BCF    0A.3
0A9A:  CALL   5BE
0A9B:  BSF    0A.3
0A9C:  MOVLW  15
0A9D:  SUBWF  76,W
0A9E:  BTFSS  03.2
0A9F:  GOTO   292
0AA0:  GOTO   331
.................... 		case 3:{printf(lcd_putc," BIPOLAR DISORDER    ");    break;}  
0AA1:  CLRF   76
0AA2:  MOVF   76,W
0AA3:  BCF    0A.3
0AA4:  CALL   272
0AA5:  BSF    0A.3
0AA6:  INCF   76,F
0AA7:  MOVWF  20
0AA8:  MOVWF  7D
0AA9:  BCF    0A.3
0AAA:  CALL   5BE
0AAB:  BSF    0A.3
0AAC:  MOVLW  15
0AAD:  SUBWF  76,W
0AAE:  BTFSS  03.2
0AAF:  GOTO   2A2
0AB0:  GOTO   331
.................... 		case 4:{printf(lcd_putc," DEPRESSIVE DISORDER ");    break;}  
0AB1:  CLRF   76
0AB2:  MOVF   76,W
0AB3:  BCF    0A.3
0AB4:  CALL   28C
0AB5:  BSF    0A.3
0AB6:  INCF   76,F
0AB7:  MOVWF  20
0AB8:  MOVWF  7D
0AB9:  BCF    0A.3
0ABA:  CALL   5BE
0ABB:  BSF    0A.3
0ABC:  MOVLW  15
0ABD:  SUBWF  76,W
0ABE:  BTFSS  03.2
0ABF:  GOTO   2B2
0AC0:  GOTO   331
.................... 		case 5:{printf(lcd_putc," EATING DISORDERS    ");    break;}  
0AC1:  CLRF   76
0AC2:  MOVF   76,W
0AC3:  BCF    0A.3
0AC4:  CALL   2A6
0AC5:  BSF    0A.3
0AC6:  INCF   76,F
0AC7:  MOVWF  20
0AC8:  MOVWF  7D
0AC9:  BCF    0A.3
0ACA:  CALL   5BE
0ACB:  BSF    0A.3
0ACC:  MOVLW  15
0ACD:  SUBWF  76,W
0ACE:  BTFSS  03.2
0ACF:  GOTO   2C2
0AD0:  GOTO   331
.................... 		case 6:{printf(lcd_putc," HYPERSOMNIA         ");    break;}  
0AD1:  CLRF   76
0AD2:  MOVF   76,W
0AD3:  BCF    0A.3
0AD4:  CALL   2C0
0AD5:  BSF    0A.3
0AD6:  INCF   76,F
0AD7:  MOVWF  20
0AD8:  MOVWF  7D
0AD9:  BCF    0A.3
0ADA:  CALL   5BE
0ADB:  BSF    0A.3
0ADC:  MOVLW  15
0ADD:  SUBWF  76,W
0ADE:  BTFSS  03.2
0ADF:  GOTO   2D2
0AE0:  GOTO   331
.................... 		case 7:{printf(lcd_putc," INSOMNIA            ");    break;} 
0AE1:  CLRF   76
0AE2:  MOVF   76,W
0AE3:  BCF    0A.3
0AE4:  CALL   2DA
0AE5:  BSF    0A.3
0AE6:  INCF   76,F
0AE7:  MOVWF  20
0AE8:  MOVWF  7D
0AE9:  BCF    0A.3
0AEA:  CALL   5BE
0AEB:  BSF    0A.3
0AEC:  MOVLW  15
0AED:  SUBWF  76,W
0AEE:  BTFSS  03.2
0AEF:  GOTO   2E2
0AF0:  GOTO   331
.................... 		case 8:{printf(lcd_putc," SOCIAL PHOBIA       ");    break;}  
0AF1:  CLRF   76
0AF2:  MOVF   76,W
0AF3:  BCF    0A.3
0AF4:  CALL   2F4
0AF5:  BSF    0A.3
0AF6:  INCF   76,F
0AF7:  MOVWF  20
0AF8:  MOVWF  7D
0AF9:  BCF    0A.3
0AFA:  CALL   5BE
0AFB:  BSF    0A.3
0AFC:  MOVLW  15
0AFD:  SUBWF  76,W
0AFE:  BTFSS  03.2
0AFF:  GOTO   2F2
0B00:  GOTO   331
.................... 		case 9:{printf(lcd_putc," STRESS AND ANXIETY  ");    break;}  
0B01:  CLRF   76
0B02:  MOVF   76,W
0B03:  BCF    0A.3
0B04:  CALL   311
0B05:  BSF    0A.3
0B06:  INCF   76,F
0B07:  MOVWF  20
0B08:  MOVWF  7D
0B09:  BCF    0A.3
0B0A:  CALL   5BE
0B0B:  BSF    0A.3
0B0C:  MOVLW  15
0B0D:  SUBWF  76,W
0B0E:  BTFSS  03.2
0B0F:  GOTO   302
0B10:  GOTO   331
.................... 		case 10:{printf(lcd_putc," PANIC DISORDER     ");    break;}  
0B11:  CLRF   76
0B12:  MOVF   76,W
0B13:  BCF    0A.3
0B14:  CALL   32B
0B15:  BSF    0A.3
0B16:  INCF   76,F
0B17:  MOVWF  20
0B18:  MOVWF  7D
0B19:  BCF    0A.3
0B1A:  CALL   5BE
0B1B:  BSF    0A.3
0B1C:  MOVLW  14
0B1D:  SUBWF  76,W
0B1E:  BTFSS  03.2
0B1F:  GOTO   312
0B20:  GOTO   331
....................  
.................... 		default:{printf(lcd_putc," End Of  List       ");    break;}  
0B21:  CLRF   76
0B22:  MOVF   76,W
0B23:  BCF    0A.3
0B24:  CALL   344
0B25:  BSF    0A.3
0B26:  INCF   76,F
0B27:  MOVWF  20
0B28:  MOVWF  7D
0B29:  BCF    0A.3
0B2A:  CALL   5BE
0B2B:  BSF    0A.3
0B2C:  MOVLW  14
0B2D:  SUBWF  76,W
0B2E:  BTFSS  03.2
0B2F:  GOTO   322
0B30:  GOTO   331
.................... 	} 
....................  
.................... } 
0B31:  RETLW  00
....................  
.................... void autoProgSel(void ) 
.................... { 
.................... 		lcd_putc("\f");  
0B32:  CLRF   74
0B33:  MOVF   74,W
0B34:  BCF    0A.3
0B35:  CALL   091
0B36:  BSF    0A.3
0B37:  IORLW  00
0B38:  BTFSC  03.2
0B39:  GOTO   340
0B3A:  INCF   74,F
0B3B:  MOVWF  7D
0B3C:  BCF    0A.3
0B3D:  CALL   5BE
0B3E:  BSF    0A.3
0B3F:  GOTO   333
.................... 				lcd_gotoxy(1,1); 
0B40:  MOVLW  01
0B41:  MOVWF  7E
0B42:  BSF    03.5
0B43:  MOVWF  20
0B44:  BCF    0A.3
0B45:  BCF    03.5
0B46:  CALL   591
0B47:  BSF    0A.3
.................... 				preMnu(0); 
0B48:  CLRF   75
0B49:  CALL   24E
.................... 				lcd_gotoxy(1,2); 
0B4A:  MOVLW  01
0B4B:  MOVWF  7E
0B4C:  MOVLW  02
0B4D:  BSF    03.5
0B4E:  MOVWF  20
0B4F:  BCF    0A.3
0B50:  BCF    03.5
0B51:  CALL   591
0B52:  BSF    0A.3
.................... 				preMnu(1); 
0B53:  MOVLW  01
0B54:  MOVWF  75
0B55:  CALL   24E
.................... 				lcd_gotoxy(1,3); 
0B56:  MOVLW  01
0B57:  MOVWF  7E
0B58:  MOVLW  03
0B59:  BSF    03.5
0B5A:  MOVWF  20
0B5B:  BCF    0A.3
0B5C:  BCF    03.5
0B5D:  CALL   591
0B5E:  BSF    0A.3
.................... 				preMnu(2); 
0B5F:  MOVLW  02
0B60:  MOVWF  75
0B61:  CALL   24E
.................... 				lcd_gotoxy(1,4); 
0B62:  MOVLW  01
0B63:  MOVWF  7E
0B64:  MOVLW  04
0B65:  BSF    03.5
0B66:  MOVWF  20
0B67:  BCF    0A.3
0B68:  BCF    03.5
0B69:  CALL   591
0B6A:  BSF    0A.3
.................... 				preMnu(3); 
0B6B:  MOVLW  03
0B6C:  MOVWF  75
0B6D:  CALL   24E
.................... 				ProgIndex =0; 
0B6E:  CLRF   67
.................... 				lcd_gotoxy(1,2); 
0B6F:  MOVLW  01
0B70:  MOVWF  7E
0B71:  MOVLW  02
0B72:  BSF    03.5
0B73:  MOVWF  20
0B74:  BCF    0A.3
0B75:  BCF    03.5
0B76:  CALL   591
0B77:  BSF    0A.3
....................  
.................... 	preprogNoSelected=0; 
0B78:  CLRF   68
.................... 	while(preprogNoSelected == 0) 
.................... 	{ 
0B79:  MOVF   68,F
0B7A:  BTFSS  03.2
0B7B:  GOTO   46C
.................... 		readKey(); 
0B7C:  BCF    0A.3
0B7D:  CALL   5F0
0B7E:  BSF    0A.3
.................... 		if(keyPressed==1) 
0B7F:  DECFSZ 31,W
0B80:  GOTO   46B
.................... 		{ 
.................... 			if(keycode == ups) 
0B81:  DECFSZ 39,W
0B82:  GOTO   388
.................... 			{ 
.................... 				if (ProgIndex< 10){ ProgIndex++;}							 
0B83:  MOVF   67,W
0B84:  SUBLW  09
0B85:  BTFSC  03.0
0B86:  INCF   67,F
.................... 				 
.................... 			} 
.................... 			else if(keycode== dwn) 
0B87:  GOTO   38F
0B88:  MOVF   39,W
0B89:  SUBLW  02
0B8A:  BTFSS  03.2
0B8B:  GOTO   38F
.................... 			{ 
.................... 				if(ProgIndex > 0){ ProgIndex--;} 
0B8C:  MOVF   67,F
0B8D:  BTFSS  03.2
0B8E:  DECF   67,F
.................... 				 
.................... 			} 
.................... 			if(strt == keycode) 
0B8F:  MOVF   39,W
0B90:  SUBLW  03
0B91:  BTFSS  03.2
0B92:  GOTO   414
.................... 			{ 
.................... 				lcd_putc("\f");  
0B93:  CLRF   74
0B94:  MOVF   74,W
0B95:  BCF    0A.3
0B96:  CALL   091
0B97:  BSF    0A.3
0B98:  IORLW  00
0B99:  BTFSC  03.2
0B9A:  GOTO   3A1
0B9B:  INCF   74,F
0B9C:  MOVWF  7D
0B9D:  BCF    0A.3
0B9E:  CALL   5BE
0B9F:  BSF    0A.3
0BA0:  GOTO   394
.................... 				TimerCounterMRI = progData[ProgIndex][1]; 
0BA1:  MOVF   67,W
0BA2:  MOVWF  74
0BA3:  MOVLW  06
0BA4:  MOVWF  75
0BA5:  BCF    0A.3
0BA6:  CALL   7DA
0BA7:  BSF    0A.3
0BA8:  MOVLW  01
0BA9:  ADDWF  21,W
0BAA:  BCF    0A.3
0BAB:  CALL   045
0BAC:  BSF    0A.3
0BAD:  MOVWF  21
0BAE:  MOVWF  62
.................... 				TimerCounterbed = progData[ProgIndex][4]; 
0BAF:  MOVF   67,W
0BB0:  MOVWF  74
0BB1:  MOVLW  06
0BB2:  MOVWF  75
0BB3:  BCF    0A.3
0BB4:  CALL   7DA
0BB5:  BSF    0A.3
0BB6:  MOVLW  04
0BB7:  ADDWF  21,W
0BB8:  BCF    0A.3
0BB9:  CALL   045
0BBA:  BSF    0A.3
0BBB:  MOVWF  21
0BBC:  MOVWF  61
.................... 				bed_intravel =progData[ProgIndex][0]; 
0BBD:  MOVF   67,W
0BBE:  MOVWF  74
0BBF:  MOVLW  06
0BC0:  MOVWF  75
0BC1:  BCF    0A.3
0BC2:  CALL   7DA
0BC3:  BSF    0A.3
0BC4:  MOVF   21,W
0BC5:  BCF    0A.3
0BC6:  CALL   045
0BC7:  BSF    0A.3
0BC8:  MOVWF  21
0BC9:  MOVWF  73
.................... 				MRI_intravel =progData[ProgIndex][3]; 
0BCA:  MOVF   67,W
0BCB:  MOVWF  74
0BCC:  MOVLW  06
0BCD:  MOVWF  75
0BCE:  BCF    0A.3
0BCF:  CALL   7DA
0BD0:  BSF    0A.3
0BD1:  MOVLW  03
0BD2:  ADDWF  21,W
0BD3:  BCF    0A.3
0BD4:  CALL   045
0BD5:  BSF    0A.3
0BD6:  MOVWF  21
0BD7:  MOVWF  71
.................... 				//frequency =  progData[ProgIndex][0]; 
.................... 				currentIntencityBed = progData[ProgIndex][2]; 
0BD8:  MOVF   67,W
0BD9:  MOVWF  74
0BDA:  MOVLW  06
0BDB:  MOVWF  75
0BDC:  BCF    0A.3
0BDD:  CALL   7DA
0BDE:  BSF    0A.3
0BDF:  MOVLW  02
0BE0:  ADDWF  21,W
0BE1:  BCF    0A.3
0BE2:  CALL   045
0BE3:  BSF    0A.3
0BE4:  MOVWF  21
0BE5:  MOVWF  5C
.................... 				currentIntencityMRI = progData[ProgIndex][5];			 
0BE6:  MOVF   67,W
0BE7:  MOVWF  74
0BE8:  MOVLW  06
0BE9:  MOVWF  75
0BEA:  BCF    0A.3
0BEB:  CALL   7DA
0BEC:  BSF    0A.3
0BED:  MOVLW  05
0BEE:  ADDWF  21,W
0BEF:  BCF    0A.3
0BF0:  CALL   045
0BF1:  BSF    0A.3
0BF2:  MOVWF  21
0BF3:  MOVWF  5D
.................... 				setintencity(currentIntencityBed,1); 
0BF4:  MOVF   5C,W
0BF5:  MOVWF  74
0BF6:  MOVLW  01
0BF7:  MOVWF  75
0BF8:  BCF    0A.3
0BF9:  CALL   4EA
0BFA:  BSF    0A.3
.................... 				setintencity(currentIntencityMRI,2); 
0BFB:  MOVF   5D,W
0BFC:  MOVWF  74
0BFD:  MOVLW  02
0BFE:  MOVWF  75
0BFF:  BCF    0A.3
0C00:  CALL   4EA
0C01:  BSF    0A.3
.................... 				//intravel = 600/frequency;			 
.................... 				Running =1; 
0C02:  MOVLW  01
0C03:  MOVWF  3C
.................... 				outEnable =1; 
0C04:  MOVWF  5E
.................... 				preprogNoSelected =1; 
0C05:  MOVWF  68
.................... 				lcd_send_byte(0,0x0c); 
0C06:  BSF    03.5
0C07:  CLRF   22
0C08:  MOVLW  0C
0C09:  MOVWF  23
0C0A:  BCF    0A.3
0C0B:  BCF    03.5
0C0C:  CALL   414
0C0D:  BSF    0A.3
.................... 				dot= 9; 
0C0E:  MOVLW  09
0C0F:  MOVWF  59
.................... 				pulseCountMRI =0; 
0C10:  CLRF   6B
0C11:  CLRF   6A
.................... 				pulseCountbed =0; 
0C12:  CLRF   6D
0C13:  CLRF   6C
.................... 				 
.................... 			} 
.................... 				lcd_putc("\f");  
0C14:  CLRF   74
0C15:  MOVF   74,W
0C16:  BCF    0A.3
0C17:  CALL   091
0C18:  BSF    0A.3
0C19:  IORLW  00
0C1A:  BTFSC  03.2
0C1B:  GOTO   422
0C1C:  INCF   74,F
0C1D:  MOVWF  7D
0C1E:  BCF    0A.3
0C1F:  CALL   5BE
0C20:  BSF    0A.3
0C21:  GOTO   415
.................... 				lcd_gotoxy(1,1); 
0C22:  MOVLW  01
0C23:  MOVWF  7E
0C24:  BSF    03.5
0C25:  MOVWF  20
0C26:  BCF    0A.3
0C27:  BCF    03.5
0C28:  CALL   591
0C29:  BSF    0A.3
.................... 				preMnu(ProgIndex-1); 
0C2A:  MOVLW  01
0C2B:  SUBWF  67,W
0C2C:  MOVWF  74
0C2D:  MOVWF  75
0C2E:  CALL   24E
.................... 				lcd_gotoxy(1,2); 
0C2F:  MOVLW  01
0C30:  MOVWF  7E
0C31:  MOVLW  02
0C32:  BSF    03.5
0C33:  MOVWF  20
0C34:  BCF    0A.3
0C35:  BCF    03.5
0C36:  CALL   591
0C37:  BSF    0A.3
.................... 				preMnu(ProgIndex); 
0C38:  MOVF   67,W
0C39:  MOVWF  75
0C3A:  CALL   24E
.................... 				lcd_gotoxy(1,3); 
0C3B:  MOVLW  01
0C3C:  MOVWF  7E
0C3D:  MOVLW  03
0C3E:  BSF    03.5
0C3F:  MOVWF  20
0C40:  BCF    0A.3
0C41:  BCF    03.5
0C42:  CALL   591
0C43:  BSF    0A.3
.................... 				preMnu(ProgIndex+1); 
0C44:  MOVLW  01
0C45:  ADDWF  67,W
0C46:  MOVWF  74
0C47:  MOVWF  75
0C48:  CALL   24E
.................... 				lcd_gotoxy(1,4); 
0C49:  MOVLW  01
0C4A:  MOVWF  7E
0C4B:  MOVLW  04
0C4C:  BSF    03.5
0C4D:  MOVWF  20
0C4E:  BCF    0A.3
0C4F:  BCF    03.5
0C50:  CALL   591
0C51:  BSF    0A.3
.................... 				preMnu(ProgIndex+2); 
0C52:  MOVLW  02
0C53:  ADDWF  67,W
0C54:  MOVWF  74
0C55:  MOVWF  75
0C56:  CALL   24E
.................... 				lcd_gotoxy(1,2); 
0C57:  MOVLW  01
0C58:  MOVWF  7E
0C59:  MOVLW  02
0C5A:  BSF    03.5
0C5B:  MOVWF  20
0C5C:  BCF    0A.3
0C5D:  BCF    03.5
0C5E:  CALL   591
0C5F:  BSF    0A.3
.................... 						 
.................... 			while(keyPressed==1) 
.................... 			{ 
0C60:  DECFSZ 31,W
0C61:  GOTO   46B
.................... 				readKey(); 
0C62:  BCF    0A.3
0C63:  CALL   5F0
0C64:  BSF    0A.3
.................... 				delay_ms(7); 
0C65:  MOVLW  07
0C66:  MOVWF  7E
0C67:  BCF    0A.3
0C68:  CALL   3B8
0C69:  BSF    0A.3
.................... 			}			 
0C6A:  GOTO   460
.................... 		} 
.................... 	} 
0C6B:  GOTO   379
.................... } 
0C6C:  BSF    0A.3
0C6D:  GOTO   598 (RETURN)
....................  
.................... void displayHighlow(char indx) 
.................... { 
.................... 		 
.................... 		if(para[indx]==1)printf(lcd_putc,"Low"); 
*
0736:  MOVLW  3F
0737:  ADDWF  74,W
0738:  MOVWF  04
0739:  DECFSZ 00,W
073A:  GOTO   745
073B:  MOVLW  4C
073C:  MOVWF  7D
073D:  CALL   5BE
073E:  MOVLW  6F
073F:  MOVWF  7D
0740:  CALL   5BE
0741:  MOVLW  77
0742:  MOVWF  7D
0743:  CALL   5BE
.................... 		else if(para[indx]==2)printf(lcd_putc,"Med"); 
0744:  GOTO   774
0745:  MOVLW  3F
0746:  ADDWF  74,W
0747:  MOVWF  04
0748:  MOVF   00,W
0749:  SUBLW  02
074A:  BTFSS  03.2
074B:  GOTO   756
074C:  MOVLW  4D
074D:  MOVWF  7D
074E:  CALL   5BE
074F:  MOVLW  65
0750:  MOVWF  7D
0751:  CALL   5BE
0752:  MOVLW  64
0753:  MOVWF  7D
0754:  CALL   5BE
.................... 		else if(para[indx]==3)printf(lcd_putc,"Hig"); 
0755:  GOTO   774
0756:  MOVLW  3F
0757:  ADDWF  74,W
0758:  MOVWF  04
0759:  MOVF   00,W
075A:  SUBLW  03
075B:  BTFSS  03.2
075C:  GOTO   767
075D:  MOVLW  48
075E:  MOVWF  7D
075F:  CALL   5BE
0760:  MOVLW  69
0761:  MOVWF  7D
0762:  CALL   5BE
0763:  MOVLW  67
0764:  MOVWF  7D
0765:  CALL   5BE
.................... 		else{para[indx]=0;printf(lcd_putc,"Off");} 
0766:  GOTO   774
0767:  MOVLW  3F
0768:  ADDWF  74,W
0769:  MOVWF  04
076A:  CLRF   00
076B:  MOVLW  4F
076C:  MOVWF  7D
076D:  CALL   5BE
076E:  MOVLW  66
076F:  MOVWF  7D
0770:  CALL   5BE
0771:  MOVLW  66
0772:  MOVWF  7D
0773:  CALL   5BE
....................  
.................... } 
0774:  RETLW  00
....................  
....................  
....................  
.................... void setparaDefault(void) 
.................... { 
.................... 		para[0]=1; 
*
0D39:  MOVLW  01
0D3A:  MOVWF  3F
.................... 		para[1]=1; 
0D3B:  MOVWF  40
.................... 		para[2]=0; 
0D3C:  CLRF   41
.................... 		para[3]=0; 
0D3D:  CLRF   42
.................... 		para[4]=1; 
0D3E:  MOVWF  43
.................... 		para[5]=1; 
0D3F:  MOVWF  44
.................... 		para[6]=0; 
0D40:  CLRF   45
.................... 		para[7]=0; 
0D41:  CLRF   46
.................... }	 
0D42:  RETLW  00
....................  
.................... 	 

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
